// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="echo_server_application_echo_server_application,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu3p-ffvc1517-2-i,HLS_INPUT_CLOCK=6.400000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.860000,HLS_SYN_LAT=2,HLS_SYN_TPT=2,HLS_SYN_MEM=29,HLS_SYN_DSP=0,HLS_SYN_FF=3251,HLS_SYN_LUT=1573,HLS_VERSION=2020_2}" *)

module echo_server_application (
        m_axis_listen_port_V_TDATA,
        s_axis_listen_port_status_V_TDATA,
        s_axis_notifications_V_TDATA,
        m_axis_read_package_V_TDATA,
        s_axis_rx_metadata_V_TDATA,
        s_axis_rx_data_V_TDATA,
        m_axis_open_connection_V_TDATA,
        s_axis_open_status_V_TDATA,
        m_axis_close_connection_V_TDATA,
        m_axis_tx_metadata_V_TDATA,
        m_axis_tx_data_V_TDATA,
        s_axis_tx_status_V_TDATA,
        ap_clk,
        ap_rst_n,
        m_axis_tx_metadata_V_TVALID,
        m_axis_tx_metadata_V_TREADY,
        m_axis_tx_data_V_TVALID,
        m_axis_tx_data_V_TREADY,
        s_axis_rx_metadata_V_TVALID,
        s_axis_rx_metadata_V_TREADY,
        s_axis_rx_data_V_TVALID,
        s_axis_rx_data_V_TREADY,
        m_axis_listen_port_V_TVALID,
        m_axis_listen_port_V_TREADY,
        s_axis_listen_port_status_V_TVALID,
        s_axis_listen_port_status_V_TREADY,
        s_axis_notifications_V_TVALID,
        s_axis_notifications_V_TREADY,
        m_axis_read_package_V_TVALID,
        m_axis_read_package_V_TREADY,
        m_axis_open_connection_V_TVALID,
        m_axis_open_connection_V_TREADY,
        s_axis_open_status_V_TVALID,
        s_axis_open_status_V_TREADY,
        m_axis_close_connection_V_TVALID,
        m_axis_close_connection_V_TREADY,
        s_axis_tx_status_V_TVALID,
        s_axis_tx_status_V_TREADY
);


output  [15:0] m_axis_listen_port_V_TDATA;
input  [7:0] s_axis_listen_port_status_V_TDATA;
input  [95:0] s_axis_notifications_V_TDATA;
output  [31:0] m_axis_read_package_V_TDATA;
input  [15:0] s_axis_rx_metadata_V_TDATA;
input  [1023:0] s_axis_rx_data_V_TDATA;
output  [63:0] m_axis_open_connection_V_TDATA;
input  [95:0] s_axis_open_status_V_TDATA;
output  [15:0] m_axis_close_connection_V_TDATA;
output  [31:0] m_axis_tx_metadata_V_TDATA;
output  [1023:0] m_axis_tx_data_V_TDATA;
input  [95:0] s_axis_tx_status_V_TDATA;
input   ap_clk;
input   ap_rst_n;
output   m_axis_tx_metadata_V_TVALID;
input   m_axis_tx_metadata_V_TREADY;
output   m_axis_tx_data_V_TVALID;
input   m_axis_tx_data_V_TREADY;
input   s_axis_rx_metadata_V_TVALID;
output   s_axis_rx_metadata_V_TREADY;
input   s_axis_rx_data_V_TVALID;
output   s_axis_rx_data_V_TREADY;
output   m_axis_listen_port_V_TVALID;
input   m_axis_listen_port_V_TREADY;
input   s_axis_listen_port_status_V_TVALID;
output   s_axis_listen_port_status_V_TREADY;
input   s_axis_notifications_V_TVALID;
output   s_axis_notifications_V_TREADY;
output   m_axis_read_package_V_TVALID;
input   m_axis_read_package_V_TREADY;
output   m_axis_open_connection_V_TVALID;
input   m_axis_open_connection_V_TREADY;
input   s_axis_open_status_V_TVALID;
output   s_axis_open_status_V_TREADY;
output   m_axis_close_connection_V_TVALID;
input   m_axis_close_connection_V_TREADY;
input   s_axis_tx_status_V_TVALID;
output   s_axis_tx_status_V_TREADY;

 reg    ap_rst_n_inv;
wire    client_U0_ap_start;
wire    client_U0_ap_done;
wire    client_U0_ap_continue;
wire    client_U0_ap_idle;
wire    client_U0_ap_ready;
wire    client_U0_esa_sessionidFifo_read;
wire    client_U0_esa_lengthFifo_read;
wire    client_U0_esa_dataFifo_read;
wire   [31:0] client_U0_m_axis_tx_metadata_V_TDATA;
wire    client_U0_m_axis_tx_metadata_V_TVALID;
wire   [1023:0] client_U0_m_axis_tx_data_V_TDATA;
wire    client_U0_m_axis_tx_data_V_TVALID;
wire    ap_sync_continue;
wire    server_U0_ap_start;
wire    server_U0_ap_done;
wire    server_U0_ap_continue;
wire    server_U0_ap_idle;
wire    server_U0_ap_ready;
wire   [15:0] server_U0_esa_sessionidFifo_din;
wire    server_U0_esa_sessionidFifo_write;
wire   [1023:0] server_U0_esa_dataFifo_din;
wire    server_U0_esa_dataFifo_write;
wire    server_U0_s_axis_rx_metadata_V_TREADY;
wire    server_U0_s_axis_rx_data_V_TREADY;
wire    open_port_U0_ap_start;
wire    open_port_U0_ap_done;
wire    open_port_U0_ap_continue;
wire    open_port_U0_ap_idle;
wire    open_port_U0_ap_ready;
wire   [15:0] open_port_U0_m_axis_listen_port_V_TDATA;
wire    open_port_U0_m_axis_listen_port_V_TVALID;
wire    open_port_U0_s_axis_listen_port_status_V_TREADY;
wire    notification_handler_U0_ap_start;
wire    notification_handler_U0_ap_done;
wire    notification_handler_U0_ap_continue;
wire    notification_handler_U0_ap_idle;
wire    notification_handler_U0_ap_ready;
wire   [15:0] notification_handler_U0_esa_lengthFifo_din;
wire    notification_handler_U0_esa_lengthFifo_write;
wire    notification_handler_U0_s_axis_notifications_V_TREADY;
wire   [31:0] notification_handler_U0_m_axis_read_package_V_TDATA;
wire    notification_handler_U0_m_axis_read_package_V_TVALID;
wire    dummy_U0_ap_start;
wire    dummy_U0_ap_done;
wire    dummy_U0_ap_continue;
wire    dummy_U0_ap_idle;
wire    dummy_U0_ap_ready;
wire   [63:0] dummy_U0_m_axis_open_connection_V_TDATA;
wire    dummy_U0_m_axis_open_connection_V_TVALID;
wire    dummy_U0_s_axis_open_status_V_TREADY;
wire   [15:0] dummy_U0_m_axis_close_connection_V_TDATA;
wire    dummy_U0_m_axis_close_connection_V_TVALID;
wire    dummy_U0_s_axis_tx_status_V_TREADY;
wire    esa_sessionidFifo_full_n;
wire   [15:0] esa_sessionidFifo_dout;
wire    esa_sessionidFifo_empty_n;
wire    esa_lengthFifo_full_n;
wire   [15:0] esa_lengthFifo_dout;
wire    esa_lengthFifo_empty_n;
wire    esa_dataFifo_full_n;
wire   [1023:0] esa_dataFifo_dout;
wire    esa_dataFifo_empty_n;

echo_server_application_client client_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(client_U0_ap_start),
    .ap_done(client_U0_ap_done),
    .ap_continue(client_U0_ap_continue),
    .ap_idle(client_U0_ap_idle),
    .ap_ready(client_U0_ap_ready),
    .esa_sessionidFifo_dout(esa_sessionidFifo_dout),
    .esa_sessionidFifo_empty_n(esa_sessionidFifo_empty_n),
    .esa_sessionidFifo_read(client_U0_esa_sessionidFifo_read),
    .esa_lengthFifo_dout(esa_lengthFifo_dout),
    .esa_lengthFifo_empty_n(esa_lengthFifo_empty_n),
    .esa_lengthFifo_read(client_U0_esa_lengthFifo_read),
    .m_axis_tx_metadata_V_TREADY(m_axis_tx_metadata_V_TREADY),
    .esa_dataFifo_dout(esa_dataFifo_dout),
    .esa_dataFifo_empty_n(esa_dataFifo_empty_n),
    .esa_dataFifo_read(client_U0_esa_dataFifo_read),
    .m_axis_tx_data_V_TREADY(m_axis_tx_data_V_TREADY),
    .m_axis_tx_metadata_V_TDATA(client_U0_m_axis_tx_metadata_V_TDATA),
    .m_axis_tx_metadata_V_TVALID(client_U0_m_axis_tx_metadata_V_TVALID),
    .m_axis_tx_data_V_TDATA(client_U0_m_axis_tx_data_V_TDATA),
    .m_axis_tx_data_V_TVALID(client_U0_m_axis_tx_data_V_TVALID)
);

echo_server_application_server server_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(server_U0_ap_start),
    .ap_done(server_U0_ap_done),
    .ap_continue(server_U0_ap_continue),
    .ap_idle(server_U0_ap_idle),
    .ap_ready(server_U0_ap_ready),
    .s_axis_rx_metadata_V_TVALID(s_axis_rx_metadata_V_TVALID),
    .s_axis_rx_data_V_TVALID(s_axis_rx_data_V_TVALID),
    .esa_sessionidFifo_din(server_U0_esa_sessionidFifo_din),
    .esa_sessionidFifo_full_n(esa_sessionidFifo_full_n),
    .esa_sessionidFifo_write(server_U0_esa_sessionidFifo_write),
    .esa_dataFifo_din(server_U0_esa_dataFifo_din),
    .esa_dataFifo_full_n(esa_dataFifo_full_n),
    .esa_dataFifo_write(server_U0_esa_dataFifo_write),
    .s_axis_rx_metadata_V_TDATA(s_axis_rx_metadata_V_TDATA),
    .s_axis_rx_metadata_V_TREADY(server_U0_s_axis_rx_metadata_V_TREADY),
    .s_axis_rx_data_V_TDATA(s_axis_rx_data_V_TDATA),
    .s_axis_rx_data_V_TREADY(server_U0_s_axis_rx_data_V_TREADY)
);

echo_server_application_open_port open_port_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(open_port_U0_ap_start),
    .ap_done(open_port_U0_ap_done),
    .ap_continue(open_port_U0_ap_continue),
    .ap_idle(open_port_U0_ap_idle),
    .ap_ready(open_port_U0_ap_ready),
    .s_axis_listen_port_status_V_TVALID(s_axis_listen_port_status_V_TVALID),
    .m_axis_listen_port_V_TREADY(m_axis_listen_port_V_TREADY),
    .m_axis_listen_port_V_TDATA(open_port_U0_m_axis_listen_port_V_TDATA),
    .m_axis_listen_port_V_TVALID(open_port_U0_m_axis_listen_port_V_TVALID),
    .s_axis_listen_port_status_V_TDATA(s_axis_listen_port_status_V_TDATA),
    .s_axis_listen_port_status_V_TREADY(open_port_U0_s_axis_listen_port_status_V_TREADY)
);

echo_server_application_notification_handler notification_handler_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(notification_handler_U0_ap_start),
    .ap_done(notification_handler_U0_ap_done),
    .ap_continue(notification_handler_U0_ap_continue),
    .ap_idle(notification_handler_U0_ap_idle),
    .ap_ready(notification_handler_U0_ap_ready),
    .s_axis_notifications_V_TVALID(s_axis_notifications_V_TVALID),
    .m_axis_read_package_V_TREADY(m_axis_read_package_V_TREADY),
    .esa_lengthFifo_din(notification_handler_U0_esa_lengthFifo_din),
    .esa_lengthFifo_full_n(esa_lengthFifo_full_n),
    .esa_lengthFifo_write(notification_handler_U0_esa_lengthFifo_write),
    .s_axis_notifications_V_TDATA(s_axis_notifications_V_TDATA),
    .s_axis_notifications_V_TREADY(notification_handler_U0_s_axis_notifications_V_TREADY),
    .m_axis_read_package_V_TDATA(notification_handler_U0_m_axis_read_package_V_TDATA),
    .m_axis_read_package_V_TVALID(notification_handler_U0_m_axis_read_package_V_TVALID)
);

echo_server_application_dummy dummy_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dummy_U0_ap_start),
    .ap_done(dummy_U0_ap_done),
    .ap_continue(dummy_U0_ap_continue),
    .ap_idle(dummy_U0_ap_idle),
    .ap_ready(dummy_U0_ap_ready),
    .s_axis_open_status_V_TVALID(s_axis_open_status_V_TVALID),
    .s_axis_tx_status_V_TVALID(s_axis_tx_status_V_TVALID),
    .m_axis_open_connection_V_TREADY(m_axis_open_connection_V_TREADY),
    .m_axis_close_connection_V_TREADY(m_axis_close_connection_V_TREADY),
    .m_axis_open_connection_V_TDATA(dummy_U0_m_axis_open_connection_V_TDATA),
    .m_axis_open_connection_V_TVALID(dummy_U0_m_axis_open_connection_V_TVALID),
    .s_axis_open_status_V_TDATA(s_axis_open_status_V_TDATA),
    .s_axis_open_status_V_TREADY(dummy_U0_s_axis_open_status_V_TREADY),
    .m_axis_close_connection_V_TDATA(dummy_U0_m_axis_close_connection_V_TDATA),
    .m_axis_close_connection_V_TVALID(dummy_U0_m_axis_close_connection_V_TVALID),
    .s_axis_tx_status_V_TDATA(s_axis_tx_status_V_TDATA),
    .s_axis_tx_status_V_TREADY(dummy_U0_s_axis_tx_status_V_TREADY)
);

echo_server_application_fifo_w16_d64_S esa_sessionidFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(server_U0_esa_sessionidFifo_din),
    .if_full_n(esa_sessionidFifo_full_n),
    .if_write(server_U0_esa_sessionidFifo_write),
    .if_dout(esa_sessionidFifo_dout),
    .if_empty_n(esa_sessionidFifo_empty_n),
    .if_read(client_U0_esa_sessionidFifo_read)
);

echo_server_application_fifo_w16_d64_S esa_lengthFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(notification_handler_U0_esa_lengthFifo_din),
    .if_full_n(esa_lengthFifo_full_n),
    .if_write(notification_handler_U0_esa_lengthFifo_write),
    .if_dout(esa_lengthFifo_dout),
    .if_empty_n(esa_lengthFifo_empty_n),
    .if_read(client_U0_esa_lengthFifo_read)
);

echo_server_application_fifo_w1024_d2048_A esa_dataFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(server_U0_esa_dataFifo_din),
    .if_full_n(esa_dataFifo_full_n),
    .if_write(server_U0_esa_dataFifo_write),
    .if_dout(esa_dataFifo_dout),
    .if_empty_n(esa_dataFifo_empty_n),
    .if_read(client_U0_esa_dataFifo_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign client_U0_ap_continue = 1'b1;

assign client_U0_ap_start = 1'b1;

assign dummy_U0_ap_continue = 1'b1;

assign dummy_U0_ap_start = 1'b1;

assign m_axis_close_connection_V_TDATA = dummy_U0_m_axis_close_connection_V_TDATA;

assign m_axis_close_connection_V_TVALID = dummy_U0_m_axis_close_connection_V_TVALID;

assign m_axis_listen_port_V_TDATA = open_port_U0_m_axis_listen_port_V_TDATA;

assign m_axis_listen_port_V_TVALID = open_port_U0_m_axis_listen_port_V_TVALID;

assign m_axis_open_connection_V_TDATA = dummy_U0_m_axis_open_connection_V_TDATA;

assign m_axis_open_connection_V_TVALID = dummy_U0_m_axis_open_connection_V_TVALID;

assign m_axis_read_package_V_TDATA = notification_handler_U0_m_axis_read_package_V_TDATA;

assign m_axis_read_package_V_TVALID = notification_handler_U0_m_axis_read_package_V_TVALID;

assign m_axis_tx_data_V_TDATA = client_U0_m_axis_tx_data_V_TDATA;

assign m_axis_tx_data_V_TVALID = client_U0_m_axis_tx_data_V_TVALID;

assign m_axis_tx_metadata_V_TDATA = client_U0_m_axis_tx_metadata_V_TDATA;

assign m_axis_tx_metadata_V_TVALID = client_U0_m_axis_tx_metadata_V_TVALID;

assign notification_handler_U0_ap_continue = 1'b1;

assign notification_handler_U0_ap_start = 1'b1;

assign open_port_U0_ap_continue = 1'b1;

assign open_port_U0_ap_start = 1'b1;

assign s_axis_listen_port_status_V_TREADY = open_port_U0_s_axis_listen_port_status_V_TREADY;

assign s_axis_notifications_V_TREADY = notification_handler_U0_s_axis_notifications_V_TREADY;

assign s_axis_open_status_V_TREADY = dummy_U0_s_axis_open_status_V_TREADY;

assign s_axis_rx_data_V_TREADY = server_U0_s_axis_rx_data_V_TREADY;

assign s_axis_rx_metadata_V_TREADY = server_U0_s_axis_rx_metadata_V_TREADY;

assign s_axis_tx_status_V_TREADY = dummy_U0_s_axis_tx_status_V_TREADY;

assign server_U0_ap_continue = 1'b1;

assign server_U0_ap_start = 1'b1;


// synthesis translate_off
`include "echo_server_application_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //echo_server_application

