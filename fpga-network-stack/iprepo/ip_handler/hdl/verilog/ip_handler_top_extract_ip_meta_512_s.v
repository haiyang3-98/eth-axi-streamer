// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ip_handler_top_extract_ip_meta_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipDataFifo_dout,
        ipDataFifo_empty_n,
        ipDataFifo_read,
        myIpAddress_dout,
        myIpAddress_empty_n,
        myIpAddress_read,
        ipDataMetaFifo_din,
        ipDataMetaFifo_full_n,
        ipDataMetaFifo_write,
        validIpAddressFifo_din,
        validIpAddressFifo_full_n,
        validIpAddressFifo_write,
        ipv4ProtocolFifo_din,
        ipv4ProtocolFifo_full_n,
        ipv4ProtocolFifo_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1023:0] ipDataFifo_dout;
input   ipDataFifo_empty_n;
output   ipDataFifo_read;
input  [31:0] myIpAddress_dout;
input   myIpAddress_empty_n;
output   myIpAddress_read;
output  [1023:0] ipDataMetaFifo_din;
input   ipDataMetaFifo_full_n;
output   ipDataMetaFifo_write;
output  [0:0] validIpAddressFifo_din;
input   validIpAddressFifo_full_n;
output   validIpAddressFifo_write;
output  [7:0] ipv4ProtocolFifo_din;
input   ipv4ProtocolFifo_full_n;
output   ipv4ProtocolFifo_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipDataFifo_read;
reg myIpAddress_read;
reg ipDataMetaFifo_write;
reg validIpAddressFifo_write;
reg ipv4ProtocolFifo_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_i_nbreadreq_fu_100_p3;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_i_i_reg_446;
reg   [0:0] tmp_i_i_reg_446_pp0_iter1_reg;
reg   [0:0] header_ready_load_reg_470;
reg    ap_predicate_op84_write_state3;
reg    ap_predicate_op85_write_state3;
reg   [0:0] metaWritten_load_reg_484;
reg    ap_predicate_op91_write_state3;
reg    ap_predicate_op93_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] header_ready;
reg   [15:0] header_idx;
reg   [159:0] header_header_V;
reg   [0:0] metaWritten;
reg    myIpAddress_blk_n;
wire    ap_block_pp0_stage0;
reg    ipDataFifo_blk_n;
reg    ipDataMetaFifo_blk_n;
reg    validIpAddressFifo_blk_n;
reg    ipv4ProtocolFifo_blk_n;
reg   [1023:0] ipDataFifo_read_reg_450;
reg   [1023:0] ipDataFifo_read_reg_450_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_457;
reg   [31:0] myIpAddress_read_reg_465;
wire   [0:0] header_ready_load_load_fu_234_p1;
wire   [159:0] p_Result_s_fu_340_p2;
wire   [0:0] metaWritten_load_load_fu_359_p1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_header_ready_flag_0_i_i_phi_fu_144_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_141;
reg   [15:0] ap_phi_mux_header_idx_new_0_i_i_phi_fu_155_p4;
wire   [15:0] add_ln67_fu_352_p2;
wire   [15:0] ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_152;
reg   [0:0] ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_165_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_162;
reg   [0:0] ap_phi_mux_header_ready_flag_1_i_i_phi_fu_177_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_173;
reg   [0:0] ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_173;
wire   [0:0] or_ln162_fu_363_p2;
reg   [0:0] ap_phi_mux_header_ready_new_1_i_i_phi_fu_188_p4;
wire   [0:0] xor_ln162_fu_369_p2;
wire   [0:0] ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_184;
reg   [15:0] ap_phi_mux_header_idx_new_1_i_i_phi_fu_199_p4;
wire   [15:0] select_ln162_fu_375_p3;
wire   [15:0] ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_195;
reg   [0:0] ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_210_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_206;
reg   [0:0] ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_206;
wire   [0:0] or_ln162_1_fu_383_p2;
wire   [159:0] ap_phi_reg_pp0_iter0_p_Val2_7_reg_217;
reg   [159:0] ap_phi_reg_pp0_iter1_p_Val2_7_reg_217;
reg   [159:0] ap_phi_reg_pp0_iter2_p_Val2_7_reg_217;
reg    ap_block_pp0_stage0_01001;
wire   [24:0] shl_ln_fu_246_p3;
wire   [0:0] trunc_ln414_fu_263_p1;
wire   [0:0] icmp_ln414_fu_257_p2;
wire   [159:0] st_fu_266_p3;
wire   [159:0] tmp_66_fu_254_p1;
wire   [159:0] select_ln414_fu_274_p3;
reg   [159:0] tmp_fu_282_p4;
wire   [159:0] select_ln414_2_fu_300_p3;
wire   [159:0] select_ln414_3_fu_308_p3;
wire   [159:0] and_ln414_fu_316_p2;
wire   [159:0] xor_ln414_fu_322_p2;
wire   [159:0] select_ln414_1_fu_292_p3;
wire   [159:0] and_ln414_1_fu_328_p2;
wire   [159:0] and_ln414_2_fu_334_p2;
wire   [31:0] dstIpAddress_V_fu_407_p4;
wire   [0:0] icmp_ln870_fu_417_p2;
wire   [0:0] icmp_ln870_1_fu_422_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_109;
reg    ap_condition_180;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 header_ready = 1'd0;
#0 header_idx = 16'd0;
#0 header_header_V = 160'd1180591620717411303493;
#0 metaWritten = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if ((tmp_i_i_nbreadreq_fu_100_p3 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_173 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_173 <= ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_173;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if ((tmp_i_i_nbreadreq_fu_100_p3 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_206 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_206 <= ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_180)) begin
        if (((tmp_i_i_reg_446 == 1'd1) & (header_ready_load_load_fu_234_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_Val2_7_reg_217 <= p_Result_s_fu_340_p2;
        end else if (((tmp_i_i_reg_446 == 1'd1) & (header_ready_load_load_fu_234_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_p_Val2_7_reg_217 <= header_header_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_Val2_7_reg_217 <= ap_phi_reg_pp0_iter1_p_Val2_7_reg_217;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_p_Val2_7_reg_217 <= ap_phi_reg_pp0_iter0_p_Val2_7_reg_217;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_reg_446 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (header_ready_load_load_fu_234_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V <= p_Result_s_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_header_ready_flag_1_i_i_phi_fu_177_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_idx <= ap_phi_mux_header_idx_new_1_i_i_phi_fu_199_p4;
        header_ready <= ap_phi_mux_header_ready_new_1_i_i_phi_fu_188_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_reg_446 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_ready_load_reg_470 <= header_ready;
        metaWritten_load_reg_484 <= metaWritten;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataFifo_read_reg_450 <= ipDataFifo_dout;
        tmp_last_V_reg_457 <= ipDataFifo_dout[32'd576];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataFifo_read_reg_450_pp0_iter1_reg <= ipDataFifo_read_reg_450;
        myIpAddress_read_reg_465 <= myIpAddress_dout;
        tmp_i_i_reg_446 <= tmp_i_i_nbreadreq_fu_100_p3;
        tmp_i_i_reg_446_pp0_iter1_reg <= tmp_i_i_reg_446;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_210_p4 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten <= ap_phi_mux_header_ready_new_1_i_i_phi_fu_188_p4;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_reg_446 == 1'd1) & (header_ready_load_load_fu_234_p1 == 1'd0))) begin
        ap_phi_mux_header_idx_new_0_i_i_phi_fu_155_p4 = add_ln67_fu_352_p2;
    end else begin
        ap_phi_mux_header_idx_new_0_i_i_phi_fu_155_p4 = ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_152;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_446 == 1'd1)) begin
        ap_phi_mux_header_idx_new_1_i_i_phi_fu_199_p4 = select_ln162_fu_375_p3;
    end else begin
        ap_phi_mux_header_idx_new_1_i_i_phi_fu_199_p4 = ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_195;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_446 == 1'd1)) begin
        if ((header_ready_load_load_fu_234_p1 == 1'd0)) begin
            ap_phi_mux_header_ready_flag_0_i_i_phi_fu_144_p4 = 1'd1;
        end else if ((header_ready_load_load_fu_234_p1 == 1'd1)) begin
            ap_phi_mux_header_ready_flag_0_i_i_phi_fu_144_p4 = 1'd0;
        end else begin
            ap_phi_mux_header_ready_flag_0_i_i_phi_fu_144_p4 = ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_141;
        end
    end else begin
        ap_phi_mux_header_ready_flag_0_i_i_phi_fu_144_p4 = ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_141;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_446 == 1'd1)) begin
        ap_phi_mux_header_ready_flag_1_i_i_phi_fu_177_p4 = or_ln162_fu_363_p2;
    end else begin
        ap_phi_mux_header_ready_flag_1_i_i_phi_fu_177_p4 = ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_173;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_446 == 1'd1)) begin
        ap_phi_mux_header_ready_new_1_i_i_phi_fu_188_p4 = xor_ln162_fu_369_p2;
    end else begin
        ap_phi_mux_header_ready_new_1_i_i_phi_fu_188_p4 = ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_184;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_446 == 1'd1)) begin
        if ((metaWritten_load_load_fu_359_p1 == 1'd0)) begin
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_165_p4 = 1'd1;
        end else if ((metaWritten_load_load_fu_359_p1 == 1'd1)) begin
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_165_p4 = 1'd0;
        end else begin
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_165_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_162;
        end
    end else begin
        ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_165_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_162;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_446 == 1'd1)) begin
        ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_210_p4 = or_ln162_1_fu_383_p2;
    end else begin
        ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_210_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_206;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0))) begin
        ipDataFifo_blk_n = ipDataFifo_empty_n;
    end else begin
        ipDataFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipDataFifo_read = 1'b1;
    end else begin
        ipDataFifo_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op85_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipDataMetaFifo_blk_n = ipDataMetaFifo_full_n;
    end else begin
        ipDataMetaFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op85_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ipDataMetaFifo_write = 1'b1;
    end else begin
        ipDataMetaFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op93_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv4ProtocolFifo_blk_n = ipv4ProtocolFifo_full_n;
    end else begin
        ipv4ProtocolFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op93_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ipv4ProtocolFifo_write = 1'b1;
    end else begin
        ipv4ProtocolFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        myIpAddress_blk_n = myIpAddress_empty_n;
    end else begin
        myIpAddress_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        myIpAddress_read = 1'b1;
    end else begin
        myIpAddress_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op91_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        validIpAddressFifo_blk_n = validIpAddressFifo_full_n;
    end else begin
        validIpAddressFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op91_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        validIpAddressFifo_write = 1'b1;
    end else begin
        validIpAddressFifo_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_352_p2 = (header_idx + 16'd1);

assign and_ln414_1_fu_328_p2 = (xor_ln414_fu_322_p2 & header_header_V);

assign and_ln414_2_fu_334_p2 = (select_ln414_1_fu_292_p3 & and_ln414_fu_316_p2);

assign and_ln414_fu_316_p2 = (select_ln414_3_fu_308_p3 & select_ln414_2_fu_300_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((myIpAddress_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (ipDataFifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op93_write_state3 == 1'b1) & (ipv4ProtocolFifo_full_n == 1'b0)) | ((ap_predicate_op91_write_state3 == 1'b1) & (validIpAddressFifo_full_n == 1'b0)) | ((ap_predicate_op85_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((myIpAddress_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (ipDataFifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op93_write_state3 == 1'b1) & (ipv4ProtocolFifo_full_n == 1'b0)) | ((ap_predicate_op91_write_state3 == 1'b1) & (validIpAddressFifo_full_n == 1'b0)) | ((ap_predicate_op85_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((myIpAddress_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (ipDataFifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op93_write_state3 == 1'b1) & (ipv4ProtocolFifo_full_n == 1'b0)) | ((ap_predicate_op91_write_state3 == 1'b1) & (validIpAddressFifo_full_n == 1'b0)) | ((ap_predicate_op85_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_100_p3 == 1'd1) & (ipDataFifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (myIpAddress_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op93_write_state3 == 1'b1) & (ipv4ProtocolFifo_full_n == 1'b0)) | ((ap_predicate_op91_write_state3 == 1'b1) & (validIpAddressFifo_full_n == 1'b0)) | ((ap_predicate_op85_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (ipDataMetaFifo_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_109 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_180 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_173 = 'bx;

assign ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_206 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_7_reg_217 = 'bx;

assign ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_152 = 'bx;

assign ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_195 = 'bx;

assign ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_141 = 'bx;

assign ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_184 = 'bx;

assign ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_162 = 'bx;

always @ (*) begin
    ap_predicate_op84_write_state3 = ((header_ready_load_reg_470 == 1'd0) & (tmp_i_i_reg_446_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op85_write_state3 = ((header_ready_load_reg_470 == 1'd1) & (tmp_i_i_reg_446_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op91_write_state3 = ((metaWritten_load_reg_484 == 1'd0) & (tmp_i_i_reg_446_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op93_write_state3 = ((metaWritten_load_reg_484 == 1'd0) & (tmp_i_i_reg_446_pp0_iter1_reg == 1'd1));
end

assign dstIpAddress_V_fu_407_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_7_reg_217[159:128]}};

assign header_ready_load_load_fu_234_p1 = header_ready;

assign icmp_ln414_fu_257_p2 = ((shl_ln_fu_246_p3 > 25'd159) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_422_p2 = ((dstIpAddress_V_fu_407_p4 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_417_p2 = ((dstIpAddress_V_fu_407_p4 == myIpAddress_read_reg_465) ? 1'b1 : 1'b0);

assign ipDataMetaFifo_din = ipDataFifo_read_reg_450_pp0_iter1_reg;

assign ipv4ProtocolFifo_din = {{ap_phi_reg_pp0_iter2_p_Val2_7_reg_217[79:72]}};

assign metaWritten_load_load_fu_359_p1 = metaWritten;

assign or_ln162_1_fu_383_p2 = (tmp_last_V_reg_457 | ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_165_p4);

assign or_ln162_fu_363_p2 = (tmp_last_V_reg_457 | ap_phi_mux_header_ready_flag_0_i_i_phi_fu_144_p4);

assign p_Result_s_fu_340_p2 = (and_ln414_2_fu_334_p2 | and_ln414_1_fu_328_p2);

assign select_ln162_fu_375_p3 = ((tmp_last_V_reg_457[0:0] == 1'b1) ? 16'd0 : ap_phi_mux_header_idx_new_0_i_i_phi_fu_155_p4);

assign select_ln414_1_fu_292_p3 = ((icmp_ln414_fu_257_p2[0:0] == 1'b1) ? tmp_fu_282_p4 : tmp_66_fu_254_p1);

assign select_ln414_2_fu_300_p3 = ((icmp_ln414_fu_257_p2[0:0] == 1'b1) ? 160'd730750818665451459101842416358141509827966271488 : 160'd1461501637330902918203684832716283019655932542975);

assign select_ln414_3_fu_308_p3 = ((icmp_ln414_fu_257_p2[0:0] == 1'b1) ? 160'd1 : 160'd1461501637330902918203684832716283019655932542975);

assign select_ln414_fu_274_p3 = ((icmp_ln414_fu_257_p2[0:0] == 1'b1) ? st_fu_266_p3 : tmp_66_fu_254_p1);

assign shl_ln_fu_246_p3 = {{header_idx}, {9'd0}};

assign st_fu_266_p3 = {{trunc_ln414_fu_263_p1}, {159'd0}};

assign tmp_66_fu_254_p1 = ipDataFifo_read_reg_450[159:0];

integer ap_tvar_int_0;

always @ (select_ln414_fu_274_p3) begin
    for (ap_tvar_int_0 = 160 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 159 - 0) begin
            tmp_fu_282_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_fu_282_p4[ap_tvar_int_0] = select_ln414_fu_274_p3[159 - ap_tvar_int_0];
        end
    end
end

assign tmp_i_i_nbreadreq_fu_100_p3 = ipDataFifo_empty_n;

assign trunc_ln414_fu_263_p1 = ipDataFifo_read_reg_450[0:0];

assign validIpAddressFifo_din = (icmp_ln870_fu_417_p2 | icmp_ln870_1_fu_422_p2);

assign xor_ln162_fu_369_p2 = (tmp_last_V_reg_457 ^ 1'd1);

assign xor_ln414_fu_322_p2 = (160'd1461501637330902918203684832716283019655932542975 ^ and_ln414_fu_316_p2);

endmodule //ip_handler_top_extract_ip_meta_512_s
