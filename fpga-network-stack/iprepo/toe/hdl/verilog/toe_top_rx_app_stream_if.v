// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toe_top_rx_app_stream_if (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_rx_data_req_V_TVALID,
        rxSar2rxApp_upd_rsp_dout,
        rxSar2rxApp_upd_rsp_empty_n,
        rxSar2rxApp_upd_rsp_read,
        rxApp2rxSar_upd_req_din,
        rxApp2rxSar_upd_req_full_n,
        rxApp2rxSar_upd_req_write,
        m_axis_rx_data_rsp_metadata_V_TREADY,
        rxBufferReadCmd_din,
        rxBufferReadCmd_full_n,
        rxBufferReadCmd_write,
        s_axis_rx_data_req_V_TDATA,
        s_axis_rx_data_req_V_TREADY,
        m_axis_rx_data_rsp_metadata_V_TDATA,
        m_axis_rx_data_rsp_metadata_V_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   s_axis_rx_data_req_V_TVALID;
input  [95:0] rxSar2rxApp_upd_rsp_dout;
input   rxSar2rxApp_upd_rsp_empty_n;
output   rxSar2rxApp_upd_rsp_read;
output  [95:0] rxApp2rxSar_upd_req_din;
input   rxApp2rxSar_upd_req_full_n;
output   rxApp2rxSar_upd_req_write;
input   m_axis_rx_data_rsp_metadata_V_TREADY;
output  [0:0] rxBufferReadCmd_din;
input   rxBufferReadCmd_full_n;
output   rxBufferReadCmd_write;
input  [31:0] s_axis_rx_data_req_V_TDATA;
output   s_axis_rx_data_req_V_TREADY;
output  [15:0] m_axis_rx_data_rsp_metadata_V_TDATA;
output   m_axis_rx_data_rsp_metadata_V_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxSar2rxApp_upd_rsp_read;
reg[95:0] rxApp2rxSar_upd_req_din;
reg rxApp2rxSar_upd_req_write;
reg rxBufferReadCmd_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_nbreadreq_fu_78_p3;
reg    ap_predicate_op23_read_state1;
wire   [0:0] tmp_i_251_nbreadreq_fu_92_p3;
reg    ap_predicate_op32_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] rasi_fsmState_V_load_reg_243;
reg   [0:0] tmp_i_reg_247;
reg   [0:0] icmp_ln874_reg_256;
reg    ap_predicate_op40_write_state2;
reg   [0:0] tmp_i_251_reg_260;
reg    ap_predicate_op42_write_state2;
reg    ap_predicate_op43_write_state2;
reg    ap_predicate_op49_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg   [0:0] rasi_fsmState_V_load_reg_243_pp0_iter1_reg;
reg   [0:0] tmp_i_251_reg_260_pp0_iter1_reg;
reg    ap_predicate_op50_write_state3;
wire    regslice_both_m_axis_rx_data_rsp_metadata_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] rasi_fsmState_V;
reg   [15:0] rasi_readLength_V;
reg    s_axis_rx_data_req_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    m_axis_rx_data_rsp_metadata_V_TDATA_blk_n;
reg    rxApp2rxSar_upd_req_blk_n;
reg    rxSar2rxApp_upd_rsp_blk_n;
reg    rxBufferReadCmd_blk_n;
wire   [15:0] trunc_ln145_8_fu_132_p1;
reg   [15:0] trunc_ln145_8_reg_251;
wire   [0:0] icmp_ln874_fu_146_p2;
wire   [31:0] trunc_ln145_fu_164_p1;
reg   [31:0] trunc_ln145_reg_264;
wire   [15:0] trunc_ln145_7_fu_168_p1;
reg   [15:0] trunc_ln145_7_reg_269;
reg   [17:0] tmp_appd_V_reg_274;
reg   [30:0] tmp_reg_279;
reg   [13:0] tmp_s_reg_284;
reg    ap_block_pp0_stage0_subdone;
wire   [15:0] tmp_length_V_fu_136_p4;
wire   [95:0] zext_ln174_fu_208_p1;
reg    ap_block_pp0_stage0_01001;
wire   [95:0] or_ln174_fu_236_p2;
wire   [17:0] zext_ln208_fu_216_p1;
wire   [17:0] add_ln208_fu_220_p2;
wire   [95:0] or_ln_fu_225_p6;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_s_axis_rx_data_req_V_U_apdone_blk;
wire   [31:0] s_axis_rx_data_req_V_TDATA_int_regslice;
wire    s_axis_rx_data_req_V_TVALID_int_regslice;
reg    s_axis_rx_data_req_V_TREADY_int_regslice;
wire    regslice_both_s_axis_rx_data_req_V_U_ack_in;
reg    m_axis_rx_data_rsp_metadata_V_TVALID_int_regslice;
wire    m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice;
wire    regslice_both_m_axis_rx_data_rsp_metadata_V_U_vld_out;
reg    ap_condition_193;
reg    ap_condition_134;
reg    ap_condition_216;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 rasi_fsmState_V = 1'd0;
#0 rasi_readLength_V = 16'd0;
end

toe_top_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_axis_rx_data_req_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(s_axis_rx_data_req_V_TDATA),
    .vld_in(s_axis_rx_data_req_V_TVALID),
    .ack_in(regslice_both_s_axis_rx_data_req_V_U_ack_in),
    .data_out(s_axis_rx_data_req_V_TDATA_int_regslice),
    .vld_out(s_axis_rx_data_req_V_TVALID_int_regslice),
    .ack_out(s_axis_rx_data_req_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_rx_data_req_V_U_apdone_blk)
);

toe_top_regslice_both #(
    .DataWidth( 16 ))
regslice_both_m_axis_rx_data_rsp_metadata_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(trunc_ln145_7_reg_269),
    .vld_in(m_axis_rx_data_rsp_metadata_V_TVALID_int_regslice),
    .ack_in(m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice),
    .data_out(m_axis_rx_data_rsp_metadata_V_TDATA),
    .vld_out(regslice_both_m_axis_rx_data_rsp_metadata_V_U_vld_out),
    .ack_out(m_axis_rx_data_rsp_metadata_V_TREADY),
    .apdone_blk(regslice_both_m_axis_rx_data_rsp_metadata_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_134)) begin
        if (((tmp_i_251_nbreadreq_fu_92_p3 == 1'd1) & (rasi_fsmState_V == 1'd1))) begin
            rasi_fsmState_V <= 1'd0;
        end else if ((1'b1 == ap_condition_193)) begin
            rasi_fsmState_V <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_78_p3 == 1'd1) & (rasi_fsmState_V == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln874_reg_256 <= icmp_ln874_fu_146_p2;
        trunc_ln145_8_reg_251 <= trunc_ln145_8_fu_132_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rasi_fsmState_V_load_reg_243 <= rasi_fsmState_V;
        rasi_fsmState_V_load_reg_243_pp0_iter1_reg <= rasi_fsmState_V_load_reg_243;
        tmp_i_251_reg_260_pp0_iter1_reg <= tmp_i_251_reg_260;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_78_p3 == 1'd1) & (rasi_fsmState_V == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln874_fu_146_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rasi_readLength_V <= {{s_axis_rx_data_req_V_TDATA_int_regslice[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_251_nbreadreq_fu_92_p3 == 1'd1) & (rasi_fsmState_V == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_appd_V_reg_274 <= {{rxSar2rxApp_upd_rsp_dout[49:32]}};
        tmp_reg_279 <= {{rxSar2rxApp_upd_rsp_dout[95:65]}};
        tmp_s_reg_284 <= {{rxSar2rxApp_upd_rsp_dout[63:50]}};
        trunc_ln145_7_reg_269 <= trunc_ln145_7_fu_168_p1;
        trunc_ln145_reg_264 <= trunc_ln145_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((rasi_fsmState_V == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_251_reg_260 <= tmp_i_251_nbreadreq_fu_92_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((rasi_fsmState_V == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_reg_247 <= tmp_i_nbreadreq_fu_78_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op42_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op50_write_state3 == 1'b1)))) begin
        m_axis_rx_data_rsp_metadata_V_TDATA_blk_n = m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice;
    end else begin
        m_axis_rx_data_rsp_metadata_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op42_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axis_rx_data_rsp_metadata_V_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_rx_data_rsp_metadata_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op40_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op49_write_state2 == 1'b1)))) begin
        rxApp2rxSar_upd_req_blk_n = rxApp2rxSar_upd_req_full_n;
    end else begin
        rxApp2rxSar_upd_req_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_216)) begin
        if ((ap_predicate_op49_write_state2 == 1'b1)) begin
            rxApp2rxSar_upd_req_din = or_ln174_fu_236_p2;
        end else if ((ap_predicate_op40_write_state2 == 1'b1)) begin
            rxApp2rxSar_upd_req_din = zext_ln174_fu_208_p1;
        end else begin
            rxApp2rxSar_upd_req_din = 'bx;
        end
    end else begin
        rxApp2rxSar_upd_req_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op40_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op49_write_state2 == 1'b1)))) begin
        rxApp2rxSar_upd_req_write = 1'b1;
    end else begin
        rxApp2rxSar_upd_req_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op43_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        rxBufferReadCmd_blk_n = rxBufferReadCmd_full_n;
    end else begin
        rxBufferReadCmd_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op43_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxBufferReadCmd_write = 1'b1;
    end else begin
        rxBufferReadCmd_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op32_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        rxSar2rxApp_upd_rsp_blk_n = rxSar2rxApp_upd_rsp_empty_n;
    end else begin
        rxSar2rxApp_upd_rsp_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op32_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxSar2rxApp_upd_rsp_read = 1'b1;
    end else begin
        rxSar2rxApp_upd_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op23_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        s_axis_rx_data_req_V_TDATA_blk_n = s_axis_rx_data_req_V_TVALID_int_regslice;
    end else begin
        s_axis_rx_data_req_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op23_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_axis_rx_data_req_V_TREADY_int_regslice = 1'b1;
    end else begin
        s_axis_rx_data_req_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln208_fu_220_p2 = (tmp_appd_V_reg_274 + zext_ln208_fu_216_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op32_read_state1 == 1'b1) & (rxSar2rxApp_upd_rsp_empty_n == 1'b0)) | ((ap_predicate_op23_read_state1 == 1'b1) & (s_axis_rx_data_req_V_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_rx_data_rsp_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op50_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op43_write_state2 == 1'b1) & (rxBufferReadCmd_full_n == 1'b0)) | ((ap_predicate_op42_write_state2 == 1'b1) & (m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (rxApp2rxSar_upd_req_full_n == 1'b0)) | ((rxApp2rxSar_upd_req_full_n == 1'b0) & (ap_predicate_op49_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op32_read_state1 == 1'b1) & (rxSar2rxApp_upd_rsp_empty_n == 1'b0)) | ((ap_predicate_op23_read_state1 == 1'b1) & (s_axis_rx_data_req_V_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_m_axis_rx_data_rsp_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op50_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op43_write_state2 == 1'b1) & (rxBufferReadCmd_full_n == 1'b0)) | ((ap_predicate_op42_write_state2 == 1'b1) & (m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (rxApp2rxSar_upd_req_full_n == 1'b0)) | ((rxApp2rxSar_upd_req_full_n == 1'b0) & (ap_predicate_op49_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op32_read_state1 == 1'b1) & (rxSar2rxApp_upd_rsp_empty_n == 1'b0)) | ((ap_predicate_op23_read_state1 == 1'b1) & (s_axis_rx_data_req_V_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_m_axis_rx_data_rsp_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op50_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op43_write_state2 == 1'b1) & (rxBufferReadCmd_full_n == 1'b0)) | ((ap_predicate_op42_write_state2 == 1'b1) & (m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (rxApp2rxSar_upd_req_full_n == 1'b0)) | ((rxApp2rxSar_upd_req_full_n == 1'b0) & (ap_predicate_op49_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op32_read_state1 == 1'b1) & (rxSar2rxApp_upd_rsp_empty_n == 1'b0)) | ((ap_predicate_op23_read_state1 == 1'b1) & (s_axis_rx_data_req_V_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((ap_predicate_op42_write_state2 == 1'b1) & (m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op43_write_state2 == 1'b1) & (rxBufferReadCmd_full_n == 1'b0)) | ((ap_predicate_op42_write_state2 == 1'b1) & (m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (rxApp2rxSar_upd_req_full_n == 1'b0)) | ((rxApp2rxSar_upd_req_full_n == 1'b0) & (ap_predicate_op49_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = ((m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op50_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_m_axis_rx_data_rsp_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_rx_data_rsp_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op50_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_134 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_193 = ((tmp_i_nbreadreq_fu_78_p3 == 1'd1) & (rasi_fsmState_V == 1'd0) & (icmp_ln874_fu_146_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_216 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op23_read_state1 = ((tmp_i_nbreadreq_fu_78_p3 == 1'd1) & (rasi_fsmState_V == 1'd0));
end

always @ (*) begin
    ap_predicate_op32_read_state1 = ((tmp_i_251_nbreadreq_fu_92_p3 == 1'd1) & (rasi_fsmState_V == 1'd1));
end

always @ (*) begin
    ap_predicate_op40_write_state2 = ((icmp_ln874_reg_256 == 1'd0) & (tmp_i_reg_247 == 1'd1) & (rasi_fsmState_V_load_reg_243 == 1'd0));
end

always @ (*) begin
    ap_predicate_op42_write_state2 = ((tmp_i_251_reg_260 == 1'd1) & (rasi_fsmState_V_load_reg_243 == 1'd1));
end

always @ (*) begin
    ap_predicate_op43_write_state2 = ((tmp_i_251_reg_260 == 1'd1) & (rasi_fsmState_V_load_reg_243 == 1'd1));
end

always @ (*) begin
    ap_predicate_op49_write_state2 = ((tmp_i_251_reg_260 == 1'd1) & (rasi_fsmState_V_load_reg_243 == 1'd1));
end

always @ (*) begin
    ap_predicate_op50_write_state3 = ((tmp_i_251_reg_260_pp0_iter1_reg == 1'd1) & (rasi_fsmState_V_load_reg_243_pp0_iter1_reg == 1'd1));
end

assign icmp_ln874_fu_146_p2 = ((tmp_length_V_fu_136_p4 == 16'd0) ? 1'b1 : 1'b0);

assign m_axis_rx_data_rsp_metadata_V_TVALID = regslice_both_m_axis_rx_data_rsp_metadata_V_U_vld_out;

assign or_ln174_fu_236_p2 = (or_ln_fu_225_p6 | 96'd18446744073709551616);

assign or_ln_fu_225_p6 = {{{{{tmp_reg_279}, {1'd0}}, {tmp_s_reg_284}}, {add_ln208_fu_220_p2}}, {trunc_ln145_reg_264}};

assign rxBufferReadCmd_din = 1'd1;

assign s_axis_rx_data_req_V_TREADY = regslice_both_s_axis_rx_data_req_V_U_ack_in;

assign tmp_i_251_nbreadreq_fu_92_p3 = rxSar2rxApp_upd_rsp_empty_n;

assign tmp_i_nbreadreq_fu_78_p3 = s_axis_rx_data_req_V_TVALID_int_regslice;

assign tmp_length_V_fu_136_p4 = {{s_axis_rx_data_req_V_TDATA_int_regslice[31:16]}};

assign trunc_ln145_7_fu_168_p1 = rxSar2rxApp_upd_rsp_dout[15:0];

assign trunc_ln145_8_fu_132_p1 = s_axis_rx_data_req_V_TDATA_int_regslice[15:0];

assign trunc_ln145_fu_164_p1 = rxSar2rxApp_upd_rsp_dout[31:0];

assign zext_ln174_fu_208_p1 = trunc_ln145_8_reg_251;

assign zext_ln208_fu_216_p1 = rasi_readLength_V;

endmodule //toe_top_rx_app_stream_if
