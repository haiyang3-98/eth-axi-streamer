-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toe_top_check_out_multiplexer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pt_portCheckUsed_rsp_fifo_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    pt_portCheckUsed_rsp_fifo_empty_n : IN STD_LOGIC;
    pt_portCheckUsed_rsp_fifo_read : OUT STD_LOGIC;
    pt_portCheckListening_rsp_fifo_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    pt_portCheckListening_rsp_fifo_empty_n : IN STD_LOGIC;
    pt_portCheckListening_rsp_fifo_read : OUT STD_LOGIC;
    pt_dstFifo_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    pt_dstFifo_empty_n : IN STD_LOGIC;
    pt_dstFifo_read : OUT STD_LOGIC;
    portTable2rxEng_check_rsp_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    portTable2rxEng_check_rsp_full_n : IN STD_LOGIC;
    portTable2rxEng_check_rsp_write : OUT STD_LOGIC );
end;


architecture behav of toe_top_check_out_multiplexer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_55_i_nbreadreq_fu_34_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op24_read_state1 : BOOLEAN;
    signal tmp_i_292_nbreadreq_fu_48_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op29_read_state1 : BOOLEAN;
    signal tmp_i_nbreadreq_fu_62_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op34_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal cm_fsmState_load_reg_105 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_i_reg_109 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op40_write_state2 : BOOLEAN;
    signal tmp_i_292_reg_118 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op41_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal cm_fsmState : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal pt_dstFifo_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal pt_portCheckListening_rsp_fifo_blk_n : STD_LOGIC;
    signal portTable2rxEng_check_rsp_blk_n : STD_LOGIC;
    signal pt_portCheckUsed_rsp_fifo_blk_n : STD_LOGIC;
    signal tmp_366_reg_113 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_122 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal pt_dstFifo_read_read_fu_70_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_166 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    cm_fsmState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (pt_dstFifo_read_read_fu_70_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                cm_fsmState <= ap_const_lv2_1;
            elsif (((tmp_i_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (pt_dstFifo_read_read_fu_70_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                cm_fsmState <= ap_const_lv2_2;
            elsif ((((tmp_i_292_nbreadreq_fu_48_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_55_i_nbreadreq_fu_34_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                cm_fsmState <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                cm_fsmState_load_reg_105 <= cm_fsmState;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_366_reg_113 <= pt_portCheckUsed_rsp_fifo_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cm_fsmState = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_55_i_reg_109 <= tmp_55_i_nbreadreq_fu_34_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cm_fsmState = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_292_reg_118 <= tmp_i_292_nbreadreq_fu_48_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_122 <= pt_portCheckListening_rsp_fifo_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, pt_portCheckUsed_rsp_fifo_empty_n, ap_predicate_op24_read_state1, pt_portCheckListening_rsp_fifo_empty_n, ap_predicate_op29_read_state1, pt_dstFifo_empty_n, ap_predicate_op34_read_state1, portTable2rxEng_check_rsp_full_n, ap_predicate_op40_write_state2, ap_predicate_op41_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (pt_dstFifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (pt_portCheckListening_rsp_fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (pt_portCheckUsed_rsp_fifo_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)) or ((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, pt_portCheckUsed_rsp_fifo_empty_n, ap_predicate_op24_read_state1, pt_portCheckListening_rsp_fifo_empty_n, ap_predicate_op29_read_state1, pt_dstFifo_empty_n, ap_predicate_op34_read_state1, portTable2rxEng_check_rsp_full_n, ap_predicate_op40_write_state2, ap_predicate_op41_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (pt_dstFifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (pt_portCheckListening_rsp_fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (pt_portCheckUsed_rsp_fifo_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)) or ((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, pt_portCheckUsed_rsp_fifo_empty_n, ap_predicate_op24_read_state1, pt_portCheckListening_rsp_fifo_empty_n, ap_predicate_op29_read_state1, pt_dstFifo_empty_n, ap_predicate_op34_read_state1, portTable2rxEng_check_rsp_full_n, ap_predicate_op40_write_state2, ap_predicate_op41_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (pt_dstFifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (pt_portCheckListening_rsp_fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (pt_portCheckUsed_rsp_fifo_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)) or ((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg, pt_portCheckUsed_rsp_fifo_empty_n, ap_predicate_op24_read_state1, pt_portCheckListening_rsp_fifo_empty_n, ap_predicate_op29_read_state1, pt_dstFifo_empty_n, ap_predicate_op34_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (pt_dstFifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (pt_portCheckListening_rsp_fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (pt_portCheckUsed_rsp_fifo_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(portTable2rxEng_check_rsp_full_n, ap_predicate_op40_write_state2, ap_predicate_op41_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)) or ((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (portTable2rxEng_check_rsp_full_n = ap_const_logic_0)));
    end process;


    ap_condition_166_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_166 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op24_read_state1_assign_proc : process(tmp_55_i_nbreadreq_fu_34_p3, cm_fsmState)
    begin
                ap_predicate_op24_read_state1 <= ((tmp_55_i_nbreadreq_fu_34_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_2));
    end process;


    ap_predicate_op29_read_state1_assign_proc : process(tmp_i_292_nbreadreq_fu_48_p3, cm_fsmState)
    begin
                ap_predicate_op29_read_state1 <= ((tmp_i_292_nbreadreq_fu_48_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_1));
    end process;


    ap_predicate_op34_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_62_p3, cm_fsmState)
    begin
                ap_predicate_op34_read_state1 <= ((tmp_i_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (cm_fsmState = ap_const_lv2_0));
    end process;


    ap_predicate_op40_write_state2_assign_proc : process(cm_fsmState_load_reg_105, tmp_55_i_reg_109)
    begin
                ap_predicate_op40_write_state2 <= ((tmp_55_i_reg_109 = ap_const_lv1_1) and (cm_fsmState_load_reg_105 = ap_const_lv2_2));
    end process;


    ap_predicate_op41_write_state2_assign_proc : process(cm_fsmState_load_reg_105, tmp_i_292_reg_118)
    begin
                ap_predicate_op41_write_state2 <= ((tmp_i_292_reg_118 = ap_const_lv1_1) and (cm_fsmState_load_reg_105 = ap_const_lv2_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    portTable2rxEng_check_rsp_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, portTable2rxEng_check_rsp_full_n, ap_predicate_op40_write_state2, ap_predicate_op41_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            portTable2rxEng_check_rsp_blk_n <= portTable2rxEng_check_rsp_full_n;
        else 
            portTable2rxEng_check_rsp_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    portTable2rxEng_check_rsp_din_assign_proc : process(ap_predicate_op40_write_state2, ap_predicate_op41_write_state2, tmp_366_reg_113, tmp_reg_122, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if ((ap_predicate_op41_write_state2 = ap_const_boolean_1)) then 
                portTable2rxEng_check_rsp_din <= tmp_reg_122;
            elsif ((ap_predicate_op40_write_state2 = ap_const_boolean_1)) then 
                portTable2rxEng_check_rsp_din <= tmp_366_reg_113;
            else 
                portTable2rxEng_check_rsp_din <= "X";
            end if;
        else 
            portTable2rxEng_check_rsp_din <= "X";
        end if; 
    end process;


    portTable2rxEng_check_rsp_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op40_write_state2, ap_predicate_op41_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            portTable2rxEng_check_rsp_write <= ap_const_logic_1;
        else 
            portTable2rxEng_check_rsp_write <= ap_const_logic_0;
        end if; 
    end process;


    pt_dstFifo_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, pt_dstFifo_empty_n, ap_predicate_op34_read_state1, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pt_dstFifo_blk_n <= pt_dstFifo_empty_n;
        else 
            pt_dstFifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    pt_dstFifo_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op34_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pt_dstFifo_read <= ap_const_logic_1;
        else 
            pt_dstFifo_read <= ap_const_logic_0;
        end if; 
    end process;

    pt_dstFifo_read_read_fu_70_p2 <= pt_dstFifo_dout;

    pt_portCheckListening_rsp_fifo_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, pt_portCheckListening_rsp_fifo_empty_n, ap_predicate_op29_read_state1, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pt_portCheckListening_rsp_fifo_blk_n <= pt_portCheckListening_rsp_fifo_empty_n;
        else 
            pt_portCheckListening_rsp_fifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    pt_portCheckListening_rsp_fifo_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op29_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op29_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pt_portCheckListening_rsp_fifo_read <= ap_const_logic_1;
        else 
            pt_portCheckListening_rsp_fifo_read <= ap_const_logic_0;
        end if; 
    end process;


    pt_portCheckUsed_rsp_fifo_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, pt_portCheckUsed_rsp_fifo_empty_n, ap_predicate_op24_read_state1, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pt_portCheckUsed_rsp_fifo_blk_n <= pt_portCheckUsed_rsp_fifo_empty_n;
        else 
            pt_portCheckUsed_rsp_fifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    pt_portCheckUsed_rsp_fifo_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op24_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op24_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pt_portCheckUsed_rsp_fifo_read <= ap_const_logic_1;
        else 
            pt_portCheckUsed_rsp_fifo_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_55_i_nbreadreq_fu_34_p3 <= (0=>(pt_portCheckUsed_rsp_fifo_empty_n), others=>'-');
    tmp_i_292_nbreadreq_fu_48_p3 <= (0=>(pt_portCheckListening_rsp_fifo_empty_n), others=>'-');
    tmp_i_nbreadreq_fu_62_p3 <= (0=>(pt_dstFifo_empty_n), others=>'-');
end behav;
