// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toe_top_check_out_multiplexer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        pt_portCheckUsed_rsp_fifo_dout,
        pt_portCheckUsed_rsp_fifo_empty_n,
        pt_portCheckUsed_rsp_fifo_read,
        pt_portCheckListening_rsp_fifo_dout,
        pt_portCheckListening_rsp_fifo_empty_n,
        pt_portCheckListening_rsp_fifo_read,
        pt_dstFifo_dout,
        pt_dstFifo_empty_n,
        pt_dstFifo_read,
        portTable2rxEng_check_rsp_din,
        portTable2rxEng_check_rsp_full_n,
        portTable2rxEng_check_rsp_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] pt_portCheckUsed_rsp_fifo_dout;
input   pt_portCheckUsed_rsp_fifo_empty_n;
output   pt_portCheckUsed_rsp_fifo_read;
input  [0:0] pt_portCheckListening_rsp_fifo_dout;
input   pt_portCheckListening_rsp_fifo_empty_n;
output   pt_portCheckListening_rsp_fifo_read;
input  [0:0] pt_dstFifo_dout;
input   pt_dstFifo_empty_n;
output   pt_dstFifo_read;
output  [0:0] portTable2rxEng_check_rsp_din;
input   portTable2rxEng_check_rsp_full_n;
output   portTable2rxEng_check_rsp_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pt_portCheckUsed_rsp_fifo_read;
reg pt_portCheckListening_rsp_fifo_read;
reg pt_dstFifo_read;
reg[0:0] portTable2rxEng_check_rsp_din;
reg portTable2rxEng_check_rsp_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_55_i_nbreadreq_fu_34_p3;
reg    ap_predicate_op24_read_state1;
wire   [0:0] tmp_i_292_nbreadreq_fu_48_p3;
reg    ap_predicate_op29_read_state1;
wire   [0:0] tmp_i_nbreadreq_fu_62_p3;
reg    ap_predicate_op34_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] cm_fsmState_load_reg_105;
reg   [0:0] tmp_55_i_reg_109;
reg    ap_predicate_op40_write_state2;
reg   [0:0] tmp_i_292_reg_118;
reg    ap_predicate_op41_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] cm_fsmState;
reg    pt_dstFifo_blk_n;
wire    ap_block_pp0_stage0;
reg    pt_portCheckListening_rsp_fifo_blk_n;
reg    portTable2rxEng_check_rsp_blk_n;
reg    pt_portCheckUsed_rsp_fifo_blk_n;
reg   [0:0] tmp_366_reg_113;
reg   [0:0] tmp_reg_122;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] pt_dstFifo_read_read_fu_70_p2;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_166;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 cm_fsmState = 2'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_62_p3 == 1'd1) & (cm_fsmState == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (pt_dstFifo_read_read_fu_70_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cm_fsmState <= 2'd1;
    end else if (((tmp_i_nbreadreq_fu_62_p3 == 1'd1) & (cm_fsmState == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (pt_dstFifo_read_read_fu_70_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cm_fsmState <= 2'd2;
    end else if ((((tmp_i_292_nbreadreq_fu_48_p3 == 1'd1) & (cm_fsmState == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_55_i_nbreadreq_fu_34_p3 == 1'd1) & (cm_fsmState == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        cm_fsmState <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cm_fsmState_load_reg_105 <= cm_fsmState;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op24_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_366_reg_113 <= pt_portCheckUsed_rsp_fifo_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((cm_fsmState == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_55_i_reg_109 <= tmp_55_i_nbreadreq_fu_34_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cm_fsmState == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_292_reg_118 <= tmp_i_292_nbreadreq_fu_48_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op29_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_122 <= pt_portCheckListening_rsp_fifo_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op41_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        portTable2rxEng_check_rsp_blk_n = portTable2rxEng_check_rsp_full_n;
    end else begin
        portTable2rxEng_check_rsp_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_166)) begin
        if ((ap_predicate_op41_write_state2 == 1'b1)) begin
            portTable2rxEng_check_rsp_din = tmp_reg_122;
        end else if ((ap_predicate_op40_write_state2 == 1'b1)) begin
            portTable2rxEng_check_rsp_din = tmp_366_reg_113;
        end else begin
            portTable2rxEng_check_rsp_din = 'bx;
        end
    end else begin
        portTable2rxEng_check_rsp_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op41_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op40_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        portTable2rxEng_check_rsp_write = 1'b1;
    end else begin
        portTable2rxEng_check_rsp_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op34_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0))) begin
        pt_dstFifo_blk_n = pt_dstFifo_empty_n;
    end else begin
        pt_dstFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op34_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pt_dstFifo_read = 1'b1;
    end else begin
        pt_dstFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op29_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0))) begin
        pt_portCheckListening_rsp_fifo_blk_n = pt_portCheckListening_rsp_fifo_empty_n;
    end else begin
        pt_portCheckListening_rsp_fifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op29_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pt_portCheckListening_rsp_fifo_read = 1'b1;
    end else begin
        pt_portCheckListening_rsp_fifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op24_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0))) begin
        pt_portCheckUsed_rsp_fifo_blk_n = pt_portCheckUsed_rsp_fifo_empty_n;
    end else begin
        pt_portCheckUsed_rsp_fifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op24_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pt_portCheckUsed_rsp_fifo_read = 1'b1;
    end else begin
        pt_portCheckUsed_rsp_fifo_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op34_read_state1 == 1'b1) & (pt_dstFifo_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (pt_portCheckListening_rsp_fifo_empty_n == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (pt_portCheckUsed_rsp_fifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op41_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op34_read_state1 == 1'b1) & (pt_dstFifo_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (pt_portCheckListening_rsp_fifo_empty_n == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (pt_portCheckUsed_rsp_fifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op41_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op34_read_state1 == 1'b1) & (pt_dstFifo_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (pt_portCheckListening_rsp_fifo_empty_n == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (pt_portCheckUsed_rsp_fifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op41_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op34_read_state1 == 1'b1) & (pt_dstFifo_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (pt_portCheckListening_rsp_fifo_empty_n == 1'b0)) | ((ap_predicate_op24_read_state1 == 1'b1) & (pt_portCheckUsed_rsp_fifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op41_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)) | ((ap_predicate_op40_write_state2 == 1'b1) & (portTable2rxEng_check_rsp_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_166 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op24_read_state1 = ((tmp_55_i_nbreadreq_fu_34_p3 == 1'd1) & (cm_fsmState == 2'd2));
end

always @ (*) begin
    ap_predicate_op29_read_state1 = ((tmp_i_292_nbreadreq_fu_48_p3 == 1'd1) & (cm_fsmState == 2'd1));
end

always @ (*) begin
    ap_predicate_op34_read_state1 = ((tmp_i_nbreadreq_fu_62_p3 == 1'd1) & (cm_fsmState == 2'd0));
end

always @ (*) begin
    ap_predicate_op40_write_state2 = ((tmp_55_i_reg_109 == 1'd1) & (cm_fsmState_load_reg_105 == 2'd2));
end

always @ (*) begin
    ap_predicate_op41_write_state2 = ((tmp_i_292_reg_118 == 1'd1) & (cm_fsmState_load_reg_105 == 2'd1));
end

assign pt_dstFifo_read_read_fu_70_p2 = pt_dstFifo_dout;

assign tmp_55_i_nbreadreq_fu_34_p3 = pt_portCheckUsed_rsp_fifo_empty_n;

assign tmp_i_292_nbreadreq_fu_48_p3 = pt_portCheckListening_rsp_fifo_empty_n;

assign tmp_i_nbreadreq_fu_62_p3 = pt_dstFifo_empty_n;

endmodule //toe_top_check_out_multiplexer
