// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ip_handler_top_ip_handler_rshiftWordByOctet_net_axis_512_512_1_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipv4ShiftFifo_dout,
        ipv4ShiftFifo_empty_n,
        ipv4ShiftFifo_read,
        ipDataFifo_din,
        ipDataFifo_full_n,
        ipDataFifo_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1023:0] ipv4ShiftFifo_dout;
input   ipv4ShiftFifo_empty_n;
output   ipv4ShiftFifo_read;
output  [1023:0] ipDataFifo_din;
input   ipDataFifo_full_n;
output   ipDataFifo_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipv4ShiftFifo_read;
reg[1023:0] ipDataFifo_din;
reg ipDataFifo_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] fsmState_1_load_load_fu_158_p1;
wire   [0:0] tmp_i_nbreadreq_fu_76_p3;
reg    ap_predicate_op18_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] fsmState_1_load_reg_303;
reg   [0:0] tmp_i_reg_317;
reg   [0:0] rs_firstWord_1_load_reg_321;
reg    ap_predicate_op48_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] fsmState_1;
reg   [511:0] prevWord_data_V_1;
reg   [63:0] prevWord_keep_V_1;
reg   [0:0] rs_firstWord_1;
reg    ipv4ShiftFifo_blk_n;
wire    ap_block_pp0_stage0;
reg    ipDataFifo_blk_n;
reg   [511:0] p_Val2_s_reg_307;
reg   [63:0] p_Val2_4_reg_312;
wire   [0:0] rs_firstWord_1_load_load_fu_193_p1;
wire   [111:0] trunc_ln674_fu_197_p1;
reg   [111:0] trunc_ln674_reg_325;
reg   [13:0] p_Result_9_i_reg_330;
wire   [0:0] sendWord_last_V_fu_221_p2;
reg   [0:0] sendWord_last_V_reg_335;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_sendWord_last_V_2_phi_fu_100_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_sendWord_last_V_2_reg_97;
reg   [0:0] ap_phi_mux_rs_firstWord_1_flag_0_i_phi_fu_110_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_rs_firstWord_1_flag_0_i_reg_107;
wire   [0:0] or_ln1350_fu_246_p2;
reg   [0:0] ap_phi_mux_rs_firstWord_1_new_0_i_phi_fu_127_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_i_reg_124;
wire   [0:0] currWord_last_V_fu_184_p3;
wire   [511:0] currWord_data_V_fu_170_p1;
wire   [1023:0] zext_ln174_2_fu_281_p1;
reg    ap_block_pp0_stage0_01001;
wire   [1023:0] zext_ln174_fu_298_p1;
wire   [49:0] p_Result_10_i_fu_211_p4;
wire   [0:0] xor_ln1350_fu_240_p2;
wire   [49:0] grp_fu_149_p4;
wire   [399:0] grp_fu_140_p4;
wire   [576:0] tmp_14_i_fu_270_p6;
wire   [576:0] or_ln_fu_286_p5;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_140;
reg    ap_condition_80;
reg    ap_condition_172;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 fsmState_1 = 1'd0;
#0 prevWord_data_V_1 = 512'd0;
#0 prevWord_keep_V_1 = 64'd0;
#0 rs_firstWord_1 = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_80)) begin
        if ((fsmState_1_load_load_fu_158_p1 == 1'd1)) begin
            fsmState_1 <= 1'd0;
        end else if ((1'b1 == ap_condition_140)) begin
            fsmState_1 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fsmState_1_load_reg_303 <= fsmState_1;
        p_Val2_4_reg_312 <= prevWord_keep_V_1;
        p_Val2_s_reg_307 <= prevWord_data_V_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (rs_firstWord_1_load_load_fu_193_p1 == 1'd0))) begin
        p_Result_9_i_reg_330 <= {{ipv4ShiftFifo_dout[525:512]}};
        sendWord_last_V_reg_335 <= sendWord_last_V_fu_221_p2;
        trunc_ln674_reg_325 <= trunc_ln674_fu_197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prevWord_data_V_1 <= currWord_data_V_fu_170_p1;
        prevWord_keep_V_1 <= {{ipv4ShiftFifo_dout[575:512]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_rs_firstWord_1_flag_0_i_phi_fu_110_p8 == 1'd1))) begin
        rs_firstWord_1 <= ap_phi_mux_rs_firstWord_1_new_0_i_phi_fu_127_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rs_firstWord_1_load_reg_321 <= rs_firstWord_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_i_reg_317 <= tmp_i_nbreadreq_fu_76_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (or_ln1350_fu_246_p2 == 1'd1)) | ((tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (or_ln1350_fu_246_p2 == 1'd0)))) begin
        ap_phi_mux_rs_firstWord_1_flag_0_i_phi_fu_110_p8 = 1'd1;
    end else if (((fsmState_1_load_load_fu_158_p1 == 1'd1) | ((tmp_i_nbreadreq_fu_76_p3 == 1'd0) & (fsmState_1 == 1'd0)))) begin
        ap_phi_mux_rs_firstWord_1_flag_0_i_phi_fu_110_p8 = 1'd0;
    end else begin
        ap_phi_mux_rs_firstWord_1_flag_0_i_phi_fu_110_p8 = ap_phi_reg_pp0_iter0_rs_firstWord_1_flag_0_i_reg_107;
    end
end

always @ (*) begin
    if (((tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0))) begin
        if ((or_ln1350_fu_246_p2 == 1'd1)) begin
            ap_phi_mux_rs_firstWord_1_new_0_i_phi_fu_127_p8 = ipv4ShiftFifo_dout[32'd576];
        end else if ((or_ln1350_fu_246_p2 == 1'd0)) begin
            ap_phi_mux_rs_firstWord_1_new_0_i_phi_fu_127_p8 = 1'd1;
        end else begin
            ap_phi_mux_rs_firstWord_1_new_0_i_phi_fu_127_p8 = ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_i_reg_124;
        end
    end else begin
        ap_phi_mux_rs_firstWord_1_new_0_i_phi_fu_127_p8 = ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_i_reg_124;
    end
end

always @ (*) begin
    if (((tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0))) begin
        if ((rs_firstWord_1_load_load_fu_193_p1 == 1'd1)) begin
            ap_phi_mux_sendWord_last_V_2_phi_fu_100_p4 = 1'd0;
        end else if ((rs_firstWord_1_load_load_fu_193_p1 == 1'd0)) begin
            ap_phi_mux_sendWord_last_V_2_phi_fu_100_p4 = sendWord_last_V_fu_221_p2;
        end else begin
            ap_phi_mux_sendWord_last_V_2_phi_fu_100_p4 = ap_phi_reg_pp0_iter0_sendWord_last_V_2_reg_97;
        end
    end else begin
        ap_phi_mux_sendWord_last_V_2_phi_fu_100_p4 = ap_phi_reg_pp0_iter0_sendWord_last_V_2_reg_97;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (fsmState_1_load_reg_303 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ipDataFifo_blk_n = ipDataFifo_full_n;
    end else begin
        ipDataFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_172)) begin
        if ((fsmState_1_load_reg_303 == 1'd1)) begin
            ipDataFifo_din = zext_ln174_fu_298_p1;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            ipDataFifo_din = zext_ln174_2_fu_281_p1;
        end else begin
            ipDataFifo_din = 'bx;
        end
    end else begin
        ipDataFifo_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_1_load_reg_303 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ipDataFifo_write = 1'b1;
    end else begin
        ipDataFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op18_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        ipv4ShiftFifo_blk_n = ipv4ShiftFifo_empty_n;
    end else begin
        ipv4ShiftFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op18_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ipv4ShiftFifo_read = 1'b1;
    end else begin
        ipv4ShiftFifo_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_303 == 1'd1) & (ipDataFifo_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (ipDataFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op18_read_state1 == 1'b1) & (ipv4ShiftFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_303 == 1'd1) & (ipDataFifo_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (ipDataFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op18_read_state1 == 1'b1) & (ipv4ShiftFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_303 == 1'd1) & (ipDataFifo_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (ipDataFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op18_read_state1 == 1'b1) & (ipv4ShiftFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op18_read_state1 == 1'b1) & (ipv4ShiftFifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((fsmState_1_load_reg_303 == 1'd1) & (ipDataFifo_full_n == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (ipDataFifo_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_140 = ((tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (or_ln1350_fu_246_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_172 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_80 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_rs_firstWord_1_flag_0_i_reg_107 = 'bx;

assign ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_i_reg_124 = 'bx;

assign ap_phi_reg_pp0_iter0_sendWord_last_V_2_reg_97 = 'bx;

always @ (*) begin
    ap_predicate_op18_read_state1 = ((tmp_i_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((rs_firstWord_1_load_reg_321 == 1'd0) & (tmp_i_reg_317 == 1'd1) & (fsmState_1_load_reg_303 == 1'd0));
end

assign currWord_data_V_fu_170_p1 = ipv4ShiftFifo_dout[511:0];

assign currWord_last_V_fu_184_p3 = ipv4ShiftFifo_dout[32'd576];

assign fsmState_1_load_load_fu_158_p1 = fsmState_1;

assign grp_fu_140_p4 = {{p_Val2_s_reg_307[511:112]}};

assign grp_fu_149_p4 = {{p_Val2_4_reg_312[63:14]}};

assign or_ln1350_fu_246_p2 = (xor_ln1350_fu_240_p2 | ap_phi_mux_sendWord_last_V_2_phi_fu_100_p4);

assign or_ln_fu_286_p5 = {{{{{{15'd16384}, {grp_fu_149_p4}}}, {112'd0}}}, {grp_fu_140_p4}};

assign p_Result_10_i_fu_211_p4 = {{ipv4ShiftFifo_dout[575:526]}};

assign rs_firstWord_1_load_load_fu_193_p1 = rs_firstWord_1;

assign sendWord_last_V_fu_221_p2 = ((p_Result_10_i_fu_211_p4 == 50'd0) ? 1'b1 : 1'b0);

assign tmp_14_i_fu_270_p6 = {{{{{sendWord_last_V_reg_335}, {p_Result_9_i_reg_330}}, {grp_fu_149_p4}}, {trunc_ln674_reg_325}}, {grp_fu_140_p4}};

assign tmp_i_nbreadreq_fu_76_p3 = ipv4ShiftFifo_empty_n;

assign trunc_ln674_fu_197_p1 = ipv4ShiftFifo_dout[111:0];

assign xor_ln1350_fu_240_p2 = (currWord_last_V_fu_184_p3 ^ 1'd1);

assign zext_ln174_2_fu_281_p1 = tmp_14_i_fu_270_p6;

assign zext_ln174_fu_298_p1 = or_ln_fu_286_p5;

endmodule //ip_handler_top_ip_handler_rshiftWordByOctet_net_axis_512_512_1_s
