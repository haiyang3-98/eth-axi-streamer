// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module udp_top_process_udp_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_rx_data_internal_dout,
        s_axis_rx_data_internal_empty_n,
        s_axis_rx_data_internal_read,
        regListenPort_dout,
        regListenPort_empty_n,
        regListenPort_read,
        rx_udpMetaFifo_din,
        rx_udpMetaFifo_full_n,
        rx_udpMetaFifo_write,
        rx_udp2shiftFifo_din,
        rx_udp2shiftFifo_full_n,
        rx_udp2shiftFifo_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1023:0] s_axis_rx_data_internal_dout;
input   s_axis_rx_data_internal_empty_n;
output   s_axis_rx_data_internal_read;
input  [15:0] regListenPort_dout;
input   regListenPort_empty_n;
output   regListenPort_read;
output  [63:0] rx_udpMetaFifo_din;
input   rx_udpMetaFifo_full_n;
output   rx_udpMetaFifo_write;
output  [1023:0] rx_udp2shiftFifo_din;
input   rx_udp2shiftFifo_full_n;
output   rx_udp2shiftFifo_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg s_axis_rx_data_internal_read;
reg regListenPort_read;
reg rx_udpMetaFifo_write;
reg rx_udp2shiftFifo_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_i_nbreadreq_fu_108_p3;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_i_i_reg_502;
reg   [0:0] tmp_i_i_reg_502_pp0_iter1_reg;
reg   [0:0] metaWritten_load_reg_539;
reg    ap_predicate_op88_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] tmp_i_i_reg_502_pp0_iter2_reg;
reg   [0:0] icmp_ln870_reg_543;
reg    ap_predicate_op89_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] pu_header_ready;
reg   [15:0] pu_header_idx;
reg   [63:0] pu_header_header_V;
reg   [0:0] metaWritten;
reg    regListenPort_blk_n;
wire    ap_block_pp0_stage0;
reg    s_axis_rx_data_internal_blk_n;
reg    rx_udp2shiftFifo_blk_n;
reg    rx_udpMetaFifo_blk_n;
reg   [1023:0] s_axis_rx_data_internal_read_reg_506;
reg   [1023:0] s_axis_rx_data_internal_read_reg_506_pp0_iter1_reg;
reg   [1023:0] s_axis_rx_data_internal_read_reg_506_pp0_iter2_reg;
reg   [0:0] currWord_last_V_reg_513;
reg   [15:0] regListenPort_read_reg_521;
wire   [63:0] p_Result_s_fu_345_p2;
wire   [0:0] pu_header_ready_load_load_fu_235_p1;
wire   [0:0] metaWritten_load_load_fu_364_p1;
wire   [0:0] icmp_ln870_fu_440_p2;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_pu_header_ready_flag_0_i_i_phi_fu_145_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_pu_header_ready_flag_0_i_i_reg_142;
reg   [15:0] ap_phi_mux_pu_header_idx_new_0_i_i_phi_fu_156_p4;
wire   [15:0] add_ln67_fu_357_p2;
wire   [15:0] ap_phi_reg_pp0_iter1_pu_header_idx_new_0_i_i_reg_153;
reg   [0:0] ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_166_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_163;
reg   [0:0] ap_phi_mux_pu_header_ready_flag_1_i_i_phi_fu_178_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_pu_header_ready_flag_1_i_i_reg_174;
reg   [0:0] ap_phi_reg_pp0_iter1_pu_header_ready_flag_1_i_i_reg_174;
wire   [0:0] or_ln73_fu_368_p2;
reg   [0:0] ap_phi_mux_pu_header_ready_new_1_i_i_phi_fu_189_p4;
wire   [0:0] xor_ln73_fu_374_p2;
wire   [0:0] ap_phi_reg_pp0_iter1_pu_header_ready_new_1_i_i_reg_185;
reg   [15:0] ap_phi_mux_pu_header_idx_new_1_i_i_phi_fu_200_p4;
wire   [15:0] select_ln73_fu_380_p3;
wire   [15:0] ap_phi_reg_pp0_iter1_pu_header_idx_new_1_i_i_reg_196;
reg   [0:0] ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_211_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_207;
reg   [0:0] ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_207;
wire   [0:0] or_ln73_1_fu_388_p2;
wire   [63:0] ap_phi_reg_pp0_iter0_p_Val2_7_in_i_i_in_in_reg_218;
reg   [63:0] ap_phi_reg_pp0_iter1_p_Val2_7_in_i_i_in_in_reg_218;
reg   [63:0] ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218;
reg    ap_block_pp0_stage0_01001;
wire   [18:0] tmp_fu_250_p3;
wire   [25:0] zext_ln414_fu_258_p1;
wire   [0:0] trunc_ln414_fu_268_p1;
wire   [0:0] icmp_ln414_fu_262_p2;
wire   [63:0] st9_fu_271_p3;
wire   [63:0] tmp_3_fu_247_p1;
wire   [63:0] select_ln414_fu_279_p3;
reg   [63:0] tmp_2_fu_287_p4;
wire   [63:0] select_ln414_2_fu_305_p3;
wire   [63:0] select_ln414_3_fu_313_p3;
wire   [63:0] and_ln414_fu_321_p2;
wire   [63:0] xor_ln414_fu_327_p2;
wire   [63:0] select_ln414_1_fu_297_p3;
wire   [63:0] and_ln414_1_fu_333_p2;
wire   [63:0] and_ln414_2_fu_339_p2;
wire   [7:0] p_Result_15_i_i_fu_422_p4;
wire   [7:0] p_Result_i_i_fu_412_p4;
wire   [15:0] p_Result_5_fu_432_p3;
wire   [7:0] p_Result_20_i_i_fu_469_p4;
wire   [7:0] p_Result_19_i_i_fu_459_p4;
wire   [7:0] trunc_ln674_fu_455_p1;
wire   [7:0] p_Result_17_i_i_fu_445_p4;
wire   [48:0] tmp_1_fu_479_p8;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_102;
reg    ap_condition_173;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 pu_header_ready = 1'd0;
#0 pu_header_idx = 16'd0;
#0 pu_header_header_V = 64'd0;
#0 metaWritten = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_102)) begin
        if ((tmp_i_i_nbreadreq_fu_108_p3 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_207 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_207 <= ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_207;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_102)) begin
        if ((tmp_i_i_nbreadreq_fu_108_p3 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_pu_header_ready_flag_1_i_i_reg_174 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pu_header_ready_flag_1_i_i_reg_174 <= ap_phi_reg_pp0_iter0_pu_header_ready_flag_1_i_i_reg_174;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_173)) begin
        if (((tmp_i_i_reg_502 == 1'd1) & (pu_header_ready_load_load_fu_235_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218 <= p_Result_s_fu_345_p2;
        end else if (((tmp_i_i_reg_502 == 1'd1) & (pu_header_ready_load_load_fu_235_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218 <= pu_header_header_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218 <= ap_phi_reg_pp0_iter1_p_Val2_7_in_i_i_in_in_reg_218;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_p_Val2_7_in_i_i_in_in_reg_218 <= ap_phi_reg_pp0_iter0_p_Val2_7_in_i_i_in_in_reg_218;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        currWord_last_V_reg_513 <= s_axis_rx_data_internal_dout[32'd576];
        s_axis_rx_data_internal_read_reg_506 <= s_axis_rx_data_internal_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_reg_502_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln870_reg_543 <= icmp_ln870_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_211_p4 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten <= ap_phi_mux_pu_header_ready_new_1_i_i_phi_fu_189_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_reg_502 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        metaWritten_load_reg_539 <= metaWritten;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_reg_502 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (pu_header_ready_load_load_fu_235_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pu_header_header_V <= p_Result_s_fu_345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_pu_header_ready_flag_1_i_i_phi_fu_178_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pu_header_idx <= ap_phi_mux_pu_header_idx_new_1_i_i_phi_fu_200_p4;
        pu_header_ready <= ap_phi_mux_pu_header_ready_new_1_i_i_phi_fu_189_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        regListenPort_read_reg_521 <= regListenPort_dout;
        s_axis_rx_data_internal_read_reg_506_pp0_iter1_reg <= s_axis_rx_data_internal_read_reg_506;
        tmp_i_i_reg_502 <= tmp_i_i_nbreadreq_fu_108_p3;
        tmp_i_i_reg_502_pp0_iter1_reg <= tmp_i_i_reg_502;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        s_axis_rx_data_internal_read_reg_506_pp0_iter2_reg <= s_axis_rx_data_internal_read_reg_506_pp0_iter1_reg;
        tmp_i_i_reg_502_pp0_iter2_reg <= tmp_i_i_reg_502_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_502 == 1'd1)) begin
        if ((metaWritten_load_load_fu_364_p1 == 1'd0)) begin
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_166_p4 = 1'd1;
        end else if ((metaWritten_load_load_fu_364_p1 == 1'd1)) begin
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_166_p4 = 1'd0;
        end else begin
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_166_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_163;
        end
    end else begin
        ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_166_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_163;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_502 == 1'd1)) begin
        ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_211_p4 = or_ln73_1_fu_388_p2;
    end else begin
        ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_211_p4 = ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_207;
    end
end

always @ (*) begin
    if (((tmp_i_i_reg_502 == 1'd1) & (pu_header_ready_load_load_fu_235_p1 == 1'd0))) begin
        ap_phi_mux_pu_header_idx_new_0_i_i_phi_fu_156_p4 = add_ln67_fu_357_p2;
    end else begin
        ap_phi_mux_pu_header_idx_new_0_i_i_phi_fu_156_p4 = ap_phi_reg_pp0_iter1_pu_header_idx_new_0_i_i_reg_153;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_502 == 1'd1)) begin
        ap_phi_mux_pu_header_idx_new_1_i_i_phi_fu_200_p4 = select_ln73_fu_380_p3;
    end else begin
        ap_phi_mux_pu_header_idx_new_1_i_i_phi_fu_200_p4 = ap_phi_reg_pp0_iter1_pu_header_idx_new_1_i_i_reg_196;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_502 == 1'd1)) begin
        if ((pu_header_ready_load_load_fu_235_p1 == 1'd0)) begin
            ap_phi_mux_pu_header_ready_flag_0_i_i_phi_fu_145_p4 = 1'd1;
        end else if ((pu_header_ready_load_load_fu_235_p1 == 1'd1)) begin
            ap_phi_mux_pu_header_ready_flag_0_i_i_phi_fu_145_p4 = 1'd0;
        end else begin
            ap_phi_mux_pu_header_ready_flag_0_i_i_phi_fu_145_p4 = ap_phi_reg_pp0_iter1_pu_header_ready_flag_0_i_i_reg_142;
        end
    end else begin
        ap_phi_mux_pu_header_ready_flag_0_i_i_phi_fu_145_p4 = ap_phi_reg_pp0_iter1_pu_header_ready_flag_0_i_i_reg_142;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_502 == 1'd1)) begin
        ap_phi_mux_pu_header_ready_flag_1_i_i_phi_fu_178_p4 = or_ln73_fu_368_p2;
    end else begin
        ap_phi_mux_pu_header_ready_flag_1_i_i_phi_fu_178_p4 = ap_phi_reg_pp0_iter1_pu_header_ready_flag_1_i_i_reg_174;
    end
end

always @ (*) begin
    if ((tmp_i_i_reg_502 == 1'd1)) begin
        ap_phi_mux_pu_header_ready_new_1_i_i_phi_fu_189_p4 = xor_ln73_fu_374_p2;
    end else begin
        ap_phi_mux_pu_header_ready_new_1_i_i_phi_fu_189_p4 = ap_phi_reg_pp0_iter1_pu_header_ready_new_1_i_i_reg_185;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        regListenPort_blk_n = regListenPort_empty_n;
    end else begin
        regListenPort_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        regListenPort_read = 1'b1;
    end else begin
        regListenPort_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_udp2shiftFifo_blk_n = rx_udp2shiftFifo_full_n;
    end else begin
        rx_udp2shiftFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_udp2shiftFifo_write = 1'b1;
    end else begin
        rx_udp2shiftFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op88_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_udpMetaFifo_blk_n = rx_udpMetaFifo_full_n;
    end else begin
        rx_udpMetaFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op88_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_udpMetaFifo_write = 1'b1;
    end else begin
        rx_udpMetaFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0))) begin
        s_axis_rx_data_internal_blk_n = s_axis_rx_data_internal_empty_n;
    end else begin
        s_axis_rx_data_internal_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        s_axis_rx_data_internal_read = 1'b1;
    end else begin
        s_axis_rx_data_internal_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_357_p2 = (pu_header_idx + 16'd1);

assign and_ln414_1_fu_333_p2 = (xor_ln414_fu_327_p2 & pu_header_header_V);

assign and_ln414_2_fu_339_p2 = (select_ln414_1_fu_297_p3 & and_ln414_fu_321_p2);

assign and_ln414_fu_321_p2 = (select_ln414_3_fu_313_p3 & select_ln414_2_fu_305_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op89_write_state4 == 1'b1) & (rx_udp2shiftFifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op88_write_state3 == 1'b1) & (rx_udpMetaFifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((regListenPort_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (s_axis_rx_data_internal_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op89_write_state4 == 1'b1) & (rx_udp2shiftFifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op88_write_state3 == 1'b1) & (rx_udpMetaFifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((regListenPort_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (s_axis_rx_data_internal_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_predicate_op89_write_state4 == 1'b1) & (rx_udp2shiftFifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op88_write_state3 == 1'b1) & (rx_udpMetaFifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((regListenPort_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (s_axis_rx_data_internal_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_108_p3 == 1'd1) & (s_axis_rx_data_internal_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (regListenPort_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op88_write_state3 == 1'b1) & (rx_udpMetaFifo_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((ap_predicate_op89_write_state4 == 1'b1) & (rx_udp2shiftFifo_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_102 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_173 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_207 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_7_in_i_i_in_in_reg_218 = 'bx;

assign ap_phi_reg_pp0_iter0_pu_header_ready_flag_1_i_i_reg_174 = 'bx;

assign ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_163 = 'bx;

assign ap_phi_reg_pp0_iter1_pu_header_idx_new_0_i_i_reg_153 = 'bx;

assign ap_phi_reg_pp0_iter1_pu_header_idx_new_1_i_i_reg_196 = 'bx;

assign ap_phi_reg_pp0_iter1_pu_header_ready_flag_0_i_i_reg_142 = 'bx;

assign ap_phi_reg_pp0_iter1_pu_header_ready_new_1_i_i_reg_185 = 'bx;

always @ (*) begin
    ap_predicate_op88_write_state3 = ((metaWritten_load_reg_539 == 1'd0) & (tmp_i_i_reg_502_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op89_write_state4 = ((icmp_ln870_reg_543 == 1'd1) & (tmp_i_i_reg_502_pp0_iter2_reg == 1'd1));
end

assign icmp_ln414_fu_262_p2 = ((zext_ln414_fu_258_p1 != 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_440_p2 = ((p_Result_5_fu_432_p3 == regListenPort_read_reg_521) ? 1'b1 : 1'b0);

assign metaWritten_load_load_fu_364_p1 = metaWritten;

assign or_ln73_1_fu_388_p2 = (currWord_last_V_reg_513 | ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_166_p4);

assign or_ln73_fu_368_p2 = (currWord_last_V_reg_513 | ap_phi_mux_pu_header_ready_flag_0_i_i_phi_fu_145_p4);

assign p_Result_15_i_i_fu_422_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218[23:16]}};

assign p_Result_17_i_i_fu_445_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218[15:8]}};

assign p_Result_19_i_i_fu_459_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218[47:40]}};

assign p_Result_20_i_i_fu_469_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218[39:32]}};

assign p_Result_5_fu_432_p3 = {{p_Result_15_i_i_fu_422_p4}, {p_Result_i_i_fu_412_p4}};

assign p_Result_i_i_fu_412_p4 = {{ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218[31:24]}};

assign p_Result_s_fu_345_p2 = (and_ln414_2_fu_339_p2 | and_ln414_1_fu_333_p2);

assign pu_header_ready_load_load_fu_235_p1 = pu_header_ready;

assign rx_udp2shiftFifo_din = s_axis_rx_data_internal_read_reg_506_pp0_iter2_reg;

assign rx_udpMetaFifo_din = tmp_1_fu_479_p8;

assign select_ln414_1_fu_297_p3 = ((icmp_ln414_fu_262_p2[0:0] == 1'b1) ? tmp_2_fu_287_p4 : tmp_3_fu_247_p1);

assign select_ln414_2_fu_305_p3 = ((icmp_ln414_fu_262_p2[0:0] == 1'b1) ? 64'd9223372036854775808 : 64'd18446744073709551615);

assign select_ln414_3_fu_313_p3 = ((icmp_ln414_fu_262_p2[0:0] == 1'b1) ? 64'd1 : 64'd18446744073709551615);

assign select_ln414_fu_279_p3 = ((icmp_ln414_fu_262_p2[0:0] == 1'b1) ? st9_fu_271_p3 : tmp_3_fu_247_p1);

assign select_ln73_fu_380_p3 = ((currWord_last_V_reg_513[0:0] == 1'b1) ? 16'd0 : ap_phi_mux_pu_header_idx_new_0_i_i_phi_fu_156_p4);

assign st9_fu_271_p3 = {{trunc_ln414_fu_268_p1}, {63'd0}};

assign tmp_1_fu_479_p8 = {{{{{{{icmp_ln870_fu_440_p2}, {p_Result_20_i_i_fu_469_p4}}, {p_Result_19_i_i_fu_459_p4}}, {p_Result_15_i_i_fu_422_p4}}, {p_Result_i_i_fu_412_p4}}, {trunc_ln674_fu_455_p1}}, {p_Result_17_i_i_fu_445_p4}};

integer ap_tvar_int_0;

always @ (select_ln414_fu_279_p3) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            tmp_2_fu_287_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_2_fu_287_p4[ap_tvar_int_0] = select_ln414_fu_279_p3[63 - ap_tvar_int_0];
        end
    end
end

assign tmp_3_fu_247_p1 = s_axis_rx_data_internal_read_reg_506[63:0];

assign tmp_fu_250_p3 = {{pu_header_idx}, {3'd0}};

assign tmp_i_i_nbreadreq_fu_108_p3 = s_axis_rx_data_internal_empty_n;

assign trunc_ln414_fu_268_p1 = s_axis_rx_data_internal_read_reg_506[0:0];

assign trunc_ln674_fu_455_p1 = ap_phi_reg_pp0_iter2_p_Val2_7_in_i_i_in_in_reg_218[7:0];

assign xor_ln414_fu_327_p2 = (64'd18446744073709551615 ^ and_ln414_fu_321_p2);

assign xor_ln73_fu_374_p2 = (currWord_last_V_reg_513 ^ 1'd1);

assign zext_ln414_fu_258_p1 = tmp_fu_250_p3;

endmodule //udp_top_process_udp_512_s
