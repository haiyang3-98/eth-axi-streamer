-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ipv4_top_ipv4_generate_ipv4_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    local_ipv4_address_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    local_ipv4_address_empty_n : IN STD_LOGIC;
    local_ipv4_address_read : OUT STD_LOGIC;
    protocol_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    protocol_empty_n : IN STD_LOGIC;
    protocol_read : OUT STD_LOGIC;
    tx_shift2ipv4Fifo_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    tx_shift2ipv4Fifo_empty_n : IN STD_LOGIC;
    tx_shift2ipv4Fifo_read : OUT STD_LOGIC;
    s_axis_tx_meta_V_TVALID : IN STD_LOGIC;
    m_axis_tx_data_internal_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    m_axis_tx_data_internal_full_n : IN STD_LOGIC;
    m_axis_tx_data_internal_write : OUT STD_LOGIC;
    s_axis_tx_meta_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_tx_meta_V_TREADY : OUT STD_LOGIC );
end;


architecture behav of ipv4_top_ipv4_generate_ipv4_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv25_A0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010100000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv16_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal gi_state_load_load_fu_224_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nbreadreq_fu_144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op28_read_state1 : BOOLEAN;
    signal ap_predicate_op35_read_state1 : BOOLEAN;
    signal tmp_i_i_nbreadreq_fu_158_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op61_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal gi_state_load_reg_476 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_i_i_reg_480 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op77_write_state2 : BOOLEAN;
    signal tmp_i_i_50_reg_492 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op81_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal gi_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal header_idx_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000101";
    signal s_axis_tx_meta_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal local_ipv4_address_blk_n : STD_LOGIC;
    signal protocol_blk_n : STD_LOGIC;
    signal m_axis_tx_data_internal_blk_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_blk_n : STD_LOGIC;
    signal tx_shift2ipv4Fifo_read_1_reg_484 : STD_LOGIC_VECTOR (1023 downto 0);
    signal currWord_data_V_fu_243_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_19_fu_261_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln82_1_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_509 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Result_18_fu_317_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln82_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_currWord_data_V_3_reg_179 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter1_currWord_data_V_3_reg_179 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter0_currWord_data_V_1_reg_188 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter1_currWord_data_V_1_reg_188 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_fu_199_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln222_cast_i_i_fu_289_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_429_p5 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln174_1_fu_454_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal zext_ln174_fu_471_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal shl_ln76_1_fu_247_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln222_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_303_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal meta_length_V_fu_333_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal len_V_fu_349_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_i_i_fu_355_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_13_fu_365_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_fu_377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_14_fu_381_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_15_fu_393_p5 : STD_LOGIC_VECTOR (159 downto 0);
    signal meta_their_address_V_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_16_fu_405_p5 : STD_LOGIC_VECTOR (159 downto 0);
    signal p_Result_17_fu_417_p5 : STD_LOGIC_VECTOR (159 downto 0);
    signal tmp_1_fu_447_p3 : STD_LOGIC_VECTOR (576 downto 0);
    signal or_ln_fu_459_p3 : STD_LOGIC_VECTOR (512 downto 0);
    signal sext_ln174_fu_467_p1 : STD_LOGIC_VECTOR (543 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_s_axis_tx_meta_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_tx_meta_V_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal s_axis_tx_meta_V_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_tx_meta_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_tx_meta_V_U_ack_in : STD_LOGIC;
    signal ap_condition_116 : BOOLEAN;
    signal ap_condition_166 : BOOLEAN;
    signal ap_condition_188 : BOOLEAN;
    signal ap_condition_222 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component ipv4_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_s_axis_tx_meta_V_U : component ipv4_top_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_tx_meta_V_TDATA,
        vld_in => s_axis_tx_meta_V_TVALID,
        ack_in => regslice_both_s_axis_tx_meta_V_U_ack_in,
        data_out => s_axis_tx_meta_V_TDATA_int_regslice,
        vld_out => s_axis_tx_meta_V_TVALID_int_regslice,
        ack_out => s_axis_tx_meta_V_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_tx_meta_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_currWord_data_V_1_reg_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_116)) then
                if (((gi_state_load_load_fu_224_p1 = ap_const_lv2_1) and (icmp_ln82_fu_311_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_currWord_data_V_1_reg_188 <= p_Result_18_fu_317_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_currWord_data_V_1_reg_188 <= ap_phi_reg_pp0_iter0_currWord_data_V_1_reg_188;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_currWord_data_V_3_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_116)) then
                if ((ap_const_boolean_1 = ap_condition_188)) then 
                    ap_phi_reg_pp0_iter1_currWord_data_V_3_reg_179 <= currWord_data_V_fu_243_p1;
                elsif ((ap_const_boolean_1 = ap_condition_166)) then 
                    ap_phi_reg_pp0_iter1_currWord_data_V_3_reg_179 <= p_Result_19_fu_261_p5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_currWord_data_V_3_reg_179 <= ap_phi_reg_pp0_iter0_currWord_data_V_3_reg_179;
                end if;
            end if; 
        end if;
    end process;

    gi_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_i_i_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((gi_state_load_load_fu_224_p1 = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                gi_state <= ap_const_lv2_2;
            elsif (((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                gi_state <= select_ln222_cast_i_i_fu_289_p3;
            elsif (((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_199_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                gi_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    header_idx_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                header_idx_1 <= ap_const_lv16_0;
            elsif ((((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln82_1_fu_255_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((gi_state_load_load_fu_224_p1 = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln82_fu_311_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                header_idx_1 <= grp_fu_207_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gi_state_load_reg_476 <= gi_state;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_header_V_1 <= p_Result_s_fu_429_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gi_state = ap_const_lv2_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_i_i_reg_480 <= grp_nbreadreq_fu_144_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gi_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_i_50_reg_492 <= grp_nbreadreq_fu_144_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_509 <= tx_shift2ipv4Fifo_dout(576 downto 512);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tx_shift2ipv4Fifo_read_1_reg_484 <= tx_shift2ipv4Fifo_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, local_ipv4_address_empty_n, protocol_empty_n, tx_shift2ipv4Fifo_empty_n, ap_predicate_op28_read_state1, ap_predicate_op35_read_state1, ap_predicate_op61_read_state1, m_axis_tx_data_internal_full_n, gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2, s_axis_tx_meta_V_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((protocol_empty_n = ap_const_logic_0) or (local_ipv4_address_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op61_read_state1 = ap_const_boolean_1) and (s_axis_tx_meta_V_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op35_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op77_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((gi_state_load_reg_476 = ap_const_lv2_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, local_ipv4_address_empty_n, protocol_empty_n, tx_shift2ipv4Fifo_empty_n, ap_predicate_op28_read_state1, ap_predicate_op35_read_state1, ap_predicate_op61_read_state1, m_axis_tx_data_internal_full_n, gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2, s_axis_tx_meta_V_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((protocol_empty_n = ap_const_logic_0) or (local_ipv4_address_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op61_read_state1 = ap_const_boolean_1) and (s_axis_tx_meta_V_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op35_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op77_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((gi_state_load_reg_476 = ap_const_lv2_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, local_ipv4_address_empty_n, protocol_empty_n, tx_shift2ipv4Fifo_empty_n, ap_predicate_op28_read_state1, ap_predicate_op35_read_state1, ap_predicate_op61_read_state1, m_axis_tx_data_internal_full_n, gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2, s_axis_tx_meta_V_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((protocol_empty_n = ap_const_logic_0) or (local_ipv4_address_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op61_read_state1 = ap_const_boolean_1) and (s_axis_tx_meta_V_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op35_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op77_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((gi_state_load_reg_476 = ap_const_lv2_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg, local_ipv4_address_empty_n, protocol_empty_n, tx_shift2ipv4Fifo_empty_n, ap_predicate_op28_read_state1, ap_predicate_op35_read_state1, ap_predicate_op61_read_state1, s_axis_tx_meta_V_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((protocol_empty_n = ap_const_logic_0) or (local_ipv4_address_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((ap_predicate_op61_read_state1 = ap_const_boolean_1) and (s_axis_tx_meta_V_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op35_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (tx_shift2ipv4Fifo_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(m_axis_tx_data_internal_full_n, gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op77_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((gi_state_load_reg_476 = ap_const_lv2_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (m_axis_tx_data_internal_full_n = ap_const_logic_0)));
    end process;


    ap_condition_116_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_116 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_166_assign_proc : process(grp_nbreadreq_fu_144_p3, gi_state, icmp_ln82_1_fu_255_p2)
    begin
                ap_condition_166 <= ((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_2) and (icmp_ln82_1_fu_255_p2 = ap_const_lv1_1));
    end process;


    ap_condition_188_assign_proc : process(grp_nbreadreq_fu_144_p3, gi_state, icmp_ln82_1_fu_255_p2)
    begin
                ap_condition_188 <= ((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_2) and (icmp_ln82_1_fu_255_p2 = ap_const_lv1_0));
    end process;


    ap_condition_222_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_222 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_currWord_data_V_1_reg_188 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_currWord_data_V_3_reg_179 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op28_read_state1_assign_proc : process(grp_nbreadreq_fu_144_p3, gi_state)
    begin
                ap_predicate_op28_read_state1 <= ((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_3));
    end process;


    ap_predicate_op35_read_state1_assign_proc : process(grp_nbreadreq_fu_144_p3, gi_state)
    begin
                ap_predicate_op35_read_state1 <= ((grp_nbreadreq_fu_144_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_2));
    end process;


    ap_predicate_op61_read_state1_assign_proc : process(tmp_i_i_nbreadreq_fu_158_p3, gi_state)
    begin
                ap_predicate_op61_read_state1 <= ((tmp_i_i_nbreadreq_fu_158_p3 = ap_const_lv1_1) and (gi_state = ap_const_lv2_0));
    end process;


    ap_predicate_op77_write_state2_assign_proc : process(gi_state_load_reg_476, tmp_1_i_i_reg_480)
    begin
                ap_predicate_op77_write_state2 <= ((tmp_1_i_i_reg_480 = ap_const_lv1_1) and (gi_state_load_reg_476 = ap_const_lv2_3));
    end process;


    ap_predicate_op81_write_state2_assign_proc : process(gi_state_load_reg_476, tmp_i_i_50_reg_492)
    begin
                ap_predicate_op81_write_state2 <= ((tmp_i_i_50_reg_492 = ap_const_lv1_1) and (gi_state_load_reg_476 = ap_const_lv2_2));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    currWord_data_V_fu_243_p1 <= tx_shift2ipv4Fifo_dout(512 - 1 downto 0);
    gi_state_load_load_fu_224_p1 <= gi_state;
    grp_fu_199_p3 <= tx_shift2ipv4Fifo_dout(576 downto 576);
    grp_fu_207_p2 <= std_logic_vector(unsigned(header_idx_1) + unsigned(ap_const_lv16_1));
    grp_nbreadreq_fu_144_p3 <= (0=>(tx_shift2ipv4Fifo_empty_n), others=>'-');
    icmp_ln82_1_fu_255_p2 <= "1" when (unsigned(shl_ln76_1_fu_247_p3) < unsigned(ap_const_lv25_A0)) else "0";
    icmp_ln82_fu_311_p2 <= "1" when (unsigned(shl_ln_fu_303_p3) < unsigned(ap_const_lv25_A0)) else "0";
    len_V_fu_349_p2 <= std_logic_vector(unsigned(meta_length_V_fu_333_p4) + unsigned(ap_const_lv16_14));

    local_ipv4_address_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, local_ipv4_address_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0))) then 
            local_ipv4_address_blk_n <= local_ipv4_address_empty_n;
        else 
            local_ipv4_address_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    local_ipv4_address_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_ipv4_address_read <= ap_const_logic_1;
        else 
            local_ipv4_address_read <= ap_const_logic_0;
        end if; 
    end process;


    m_axis_tx_data_internal_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axis_tx_data_internal_full_n, gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op77_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((gi_state_load_reg_476 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            m_axis_tx_data_internal_blk_n <= m_axis_tx_data_internal_full_n;
        else 
            m_axis_tx_data_internal_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    m_axis_tx_data_internal_din_assign_proc : process(gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2, tx_shift2ipv4Fifo_read_1_reg_484, zext_ln174_1_fu_454_p1, zext_ln174_fu_471_p1, ap_condition_222)
    begin
        if ((ap_const_boolean_1 = ap_condition_222)) then
            if ((gi_state_load_reg_476 = ap_const_lv2_1)) then 
                m_axis_tx_data_internal_din <= zext_ln174_fu_471_p1;
            elsif ((ap_predicate_op81_write_state2 = ap_const_boolean_1)) then 
                m_axis_tx_data_internal_din <= zext_ln174_1_fu_454_p1;
            elsif ((ap_predicate_op77_write_state2 = ap_const_boolean_1)) then 
                m_axis_tx_data_internal_din <= tx_shift2ipv4Fifo_read_1_reg_484;
            else 
                m_axis_tx_data_internal_din
            end if;
        else 
            m_axis_tx_data_internal_din
        end if; 
    end process;


    m_axis_tx_data_internal_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gi_state_load_reg_476, ap_predicate_op77_write_state2, ap_predicate_op81_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op77_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((gi_state_load_reg_476 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            m_axis_tx_data_internal_write <= ap_const_logic_1;
        else 
            m_axis_tx_data_internal_write <= ap_const_logic_0;
        end if; 
    end process;

    meta_length_V_fu_333_p4 <= s_axis_tx_meta_V_TDATA_int_regslice(47 downto 32);
    meta_their_address_V_fu_329_p1 <= s_axis_tx_meta_V_TDATA_int_regslice(32 - 1 downto 0);
    or_ln_fu_459_p3 <= (ap_const_lv1_1 & ap_phi_reg_pp0_iter1_currWord_data_V_1_reg_188);
    p_Result_13_fu_365_p5 <= (ap_const_lv16_0(15 downto 8) & p_Result_i_i_fu_355_p4);
    p_Result_14_fu_381_p5 <= (trunc_ln674_fu_377_p1 & p_Result_13_fu_365_p5(7 downto 0));
    p_Result_15_fu_393_p5 <= (header_header_V_1(159 downto 32) & p_Result_14_fu_381_p5 & header_header_V_1(15 downto 0));
    p_Result_16_fu_405_p5 <= (meta_their_address_V_fu_329_p1 & p_Result_15_fu_393_p5(127 downto 0));
    p_Result_17_fu_417_p5 <= (p_Result_16_fu_405_p5(159 downto 128) & local_ipv4_address_dout & p_Result_16_fu_405_p5(95 downto 0));
    p_Result_18_fu_317_p5 <= (ap_const_lv512_lc_2(511 downto 160) & header_header_V_1);
    p_Result_19_fu_261_p5 <= (currWord_data_V_fu_243_p1(511 downto 160) & header_header_V_1);
    p_Result_i_i_fu_355_p4 <= len_V_fu_349_p2(15 downto 8);
    p_Result_s_fu_429_p5 <= (p_Result_17_fu_417_p5(159 downto 80) & protocol_dout & p_Result_17_fu_417_p5(71 downto 0));

    protocol_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, protocol_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0))) then 
            protocol_blk_n <= protocol_empty_n;
        else 
            protocol_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    protocol_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            protocol_read <= ap_const_logic_1;
        else 
            protocol_read <= ap_const_logic_0;
        end if; 
    end process;


    s_axis_tx_meta_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_predicate_op61_read_state1, ap_block_pp0_stage0, s_axis_tx_meta_V_TVALID_int_regslice)
    begin
        if (((ap_predicate_op61_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0))) then 
            s_axis_tx_meta_V_TDATA_blk_n <= s_axis_tx_meta_V_TVALID_int_regslice;
        else 
            s_axis_tx_meta_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_tx_meta_V_TREADY <= regslice_both_s_axis_tx_meta_V_U_ack_in;

    s_axis_tx_meta_V_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op61_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op61_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_tx_meta_V_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_tx_meta_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln222_cast_i_i_fu_289_p3 <= 
        ap_const_lv2_3 when (xor_ln222_fu_283_p2(0) = '1') else 
        ap_const_lv2_0;
        sext_ln174_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln_fu_459_p3),544));

    shl_ln76_1_fu_247_p3 <= (header_idx_1 & ap_const_lv9_0);
    shl_ln_fu_303_p3 <= (header_idx_1 & ap_const_lv9_0);
    tmp_1_fu_447_p3 <= (tmp_reg_509 & ap_phi_reg_pp0_iter1_currWord_data_V_3_reg_179);
    tmp_i_i_nbreadreq_fu_158_p3 <= (0=>(s_axis_tx_meta_V_TVALID_int_regslice), others=>'-');
    trunc_ln674_fu_377_p1 <= len_V_fu_349_p2(8 - 1 downto 0);

    tx_shift2ipv4Fifo_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, tx_shift2ipv4Fifo_empty_n, ap_predicate_op28_read_state1, ap_predicate_op35_read_state1, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op35_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0)) or ((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0)))) then 
            tx_shift2ipv4Fifo_blk_n <= tx_shift2ipv4Fifo_empty_n;
        else 
            tx_shift2ipv4Fifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx_shift2ipv4Fifo_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op28_read_state1, ap_predicate_op35_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op35_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op28_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tx_shift2ipv4Fifo_read <= ap_const_logic_1;
        else 
            tx_shift2ipv4Fifo_read <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln222_fu_283_p2 <= (grp_fu_199_p3 xor ap_const_lv1_1);
    zext_ln174_1_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_447_p3),1024));
    zext_ln174_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln174_fu_467_p1),1024));
end behav;
