// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module echo_server_application_client (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        esa_sessionidFifo_dout,
        esa_sessionidFifo_empty_n,
        esa_sessionidFifo_read,
        esa_lengthFifo_dout,
        esa_lengthFifo_empty_n,
        esa_lengthFifo_read,
        m_axis_tx_metadata_V_TREADY,
        esa_dataFifo_dout,
        esa_dataFifo_empty_n,
        esa_dataFifo_read,
        m_axis_tx_data_V_TREADY,
        m_axis_tx_metadata_V_TDATA,
        m_axis_tx_metadata_V_TVALID,
        m_axis_tx_data_V_TDATA,
        m_axis_tx_data_V_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] esa_sessionidFifo_dout;
input   esa_sessionidFifo_empty_n;
output   esa_sessionidFifo_read;
input  [15:0] esa_lengthFifo_dout;
input   esa_lengthFifo_empty_n;
output   esa_lengthFifo_read;
input   m_axis_tx_metadata_V_TREADY;
input  [1023:0] esa_dataFifo_dout;
input   esa_dataFifo_empty_n;
output   esa_dataFifo_read;
input   m_axis_tx_data_V_TREADY;
output  [31:0] m_axis_tx_metadata_V_TDATA;
output   m_axis_tx_metadata_V_TVALID;
output  [1023:0] m_axis_tx_data_V_TDATA;
output   m_axis_tx_data_V_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg esa_sessionidFifo_read;
reg esa_lengthFifo_read;
reg esa_dataFifo_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] esac_fsmState_V_load_reg_160;
reg   [0:0] tmp_4_i_reg_164;
reg   [0:0] tmp_6_i_reg_168;
wire   [0:0] grp_nbwritereq_fu_70_p3;
reg    ap_predicate_op31_read_state2;
reg    ap_predicate_op32_read_state2;
reg    ap_predicate_op34_write_state2;
reg   [0:0] tmp_i_reg_172;
wire   [0:0] grp_nbwritereq_fu_86_p3;
reg    ap_predicate_op39_read_state2;
reg    ap_predicate_op41_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] esac_fsmState_V;
reg    m_axis_tx_metadata_V_TDATA_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_7_i_reg_176;
reg    m_axis_tx_data_V_TDATA_blk_n;
reg   [0:0] tmp_5_i_reg_185;
reg    esa_sessionidFifo_blk_n;
reg    esa_lengthFifo_blk_n;
reg    esa_dataFifo_blk_n;
wire   [0:0] esac_fsmState_V_load_load_fu_127_p1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op45_write_state3;
reg    ap_predicate_op46_write_state3;
wire    regslice_both_m_axis_tx_metadata_V_U_apdone_blk;
wire    regslice_both_m_axis_tx_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_4_i_nbreadreq_fu_54_p3;
wire   [0:0] tmp_6_i_nbreadreq_fu_62_p3;
wire   [0:0] tmp_i_nbreadreq_fu_78_p3;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] currWord_last_V_fu_146_p3;
reg    ap_block_pp0_stage1_01001;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire   [31:0] m_axis_tx_metadata_V_TDATA_int_regslice;
reg    m_axis_tx_metadata_V_TVALID_int_regslice;
wire    m_axis_tx_metadata_V_TREADY_int_regslice;
wire    regslice_both_m_axis_tx_metadata_V_U_vld_out;
reg    m_axis_tx_data_V_TVALID_int_regslice;
wire    m_axis_tx_data_V_TREADY_int_regslice;
wire    regslice_both_m_axis_tx_data_V_U_vld_out;
reg    ap_condition_56;
reg    ap_condition_203;
reg    ap_condition_109;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 esac_fsmState_V = 1'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

echo_server_application_regslice_both #(
    .DataWidth( 32 ))
regslice_both_m_axis_tx_metadata_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_tx_metadata_V_TDATA_int_regslice),
    .vld_in(m_axis_tx_metadata_V_TVALID_int_regslice),
    .ack_in(m_axis_tx_metadata_V_TREADY_int_regslice),
    .data_out(m_axis_tx_metadata_V_TDATA),
    .vld_out(regslice_both_m_axis_tx_metadata_V_U_vld_out),
    .ack_out(m_axis_tx_metadata_V_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_metadata_V_U_apdone_blk)
);

echo_server_application_regslice_both #(
    .DataWidth( 1024 ))
regslice_both_m_axis_tx_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(esa_dataFifo_dout),
    .vld_in(m_axis_tx_data_V_TVALID_int_regslice),
    .ack_in(m_axis_tx_data_V_TREADY_int_regslice),
    .data_out(m_axis_tx_data_V_TDATA),
    .vld_out(regslice_both_m_axis_tx_data_V_U_vld_out),
    .ack_out(m_axis_tx_data_V_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_109)) begin
        if ((1'b1 == ap_condition_203)) begin
            esac_fsmState_V <= 1'd0;
        end else if ((1'b1 == ap_condition_56)) begin
            esac_fsmState_V <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        esac_fsmState_V_load_reg_160 <= esac_fsmState_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (esac_fsmState_V_load_load_fu_127_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_i_reg_164 <= tmp_4_i_nbreadreq_fu_54_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_172 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_5_i_reg_185 <= m_axis_tx_data_V_TREADY_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_4_i_nbreadreq_fu_54_p3 == 1'd1) & (esac_fsmState_V_load_load_fu_127_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_i_reg_168 <= tmp_6_i_nbreadreq_fu_62_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_7_i_reg_176 <= m_axis_tx_metadata_V_TREADY_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (esac_fsmState_V_load_load_fu_127_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_reg_172 <= tmp_i_nbreadreq_fu_78_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        esa_dataFifo_blk_n = esa_dataFifo_empty_n;
    end else begin
        esa_dataFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op39_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        esa_dataFifo_read = 1'b1;
    end else begin
        esa_dataFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op32_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        esa_lengthFifo_blk_n = esa_lengthFifo_empty_n;
    end else begin
        esa_lengthFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op32_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        esa_lengthFifo_read = 1'b1;
    end else begin
        esa_lengthFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op31_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        esa_sessionidFifo_blk_n = esa_sessionidFifo_empty_n;
    end else begin
        esa_sessionidFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op31_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        esa_sessionidFifo_read = 1'b1;
    end else begin
        esa_sessionidFifo_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op41_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((tmp_i_reg_172 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_i_reg_185 == 1'd1) & (1'b0 == ap_block_pp0_stage0)))) begin
        m_axis_tx_data_V_TDATA_blk_n = m_axis_tx_data_V_TREADY_int_regslice;
    end else begin
        m_axis_tx_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op41_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axis_tx_data_V_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_tx_data_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op34_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_i_reg_176 == 1'd1) & (1'b0 == ap_block_pp0_stage0)))) begin
        m_axis_tx_metadata_V_TDATA_blk_n = m_axis_tx_metadata_V_TREADY_int_regslice;
    end else begin
        m_axis_tx_metadata_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op34_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axis_tx_metadata_V_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_tx_metadata_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_m_axis_tx_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_tx_data_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op46_write_state3 == 1'b1)) | ((m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op45_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_m_axis_tx_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_tx_data_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op46_write_state3 == 1'b1)) | ((m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op45_write_state3 == 1'b1)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op41_write_state2 == 1'b1) & (m_axis_tx_data_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op39_read_state2 == 1'b1) & (esa_dataFifo_empty_n == 1'b0)) | ((ap_predicate_op34_write_state2 == 1'b1) & (m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op32_read_state2 == 1'b1) & (esa_lengthFifo_empty_n == 1'b0)) | ((ap_predicate_op31_read_state2 == 1'b1) & (esa_sessionidFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op41_write_state2 == 1'b1) & (m_axis_tx_data_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op39_read_state2 == 1'b1) & (esa_dataFifo_empty_n == 1'b0)) | ((ap_predicate_op34_write_state2 == 1'b1) & (m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op32_read_state2 == 1'b1) & (esa_lengthFifo_empty_n == 1'b0)) | ((ap_predicate_op31_read_state2 == 1'b1) & (esa_sessionidFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op41_write_state2 == 1'b1) & (m_axis_tx_data_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op39_read_state2 == 1'b1) & (esa_dataFifo_empty_n == 1'b0)) | ((ap_predicate_op34_write_state2 == 1'b1) & (m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op32_read_state2 == 1'b1) & (esa_lengthFifo_empty_n == 1'b0)) | ((ap_predicate_op31_read_state2 == 1'b1) & (esa_sessionidFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op41_write_state2 == 1'b1) & (m_axis_tx_data_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op34_write_state2 == 1'b1) & (m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((ap_predicate_op41_write_state2 == 1'b1) & (m_axis_tx_data_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op39_read_state2 == 1'b1) & (esa_dataFifo_empty_n == 1'b0)) | ((ap_predicate_op34_write_state2 == 1'b1) & (m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op32_read_state2 == 1'b1) & (esa_lengthFifo_empty_n == 1'b0)) | ((ap_predicate_op31_read_state2 == 1'b1) & (esa_sessionidFifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((m_axis_tx_data_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op46_write_state3 == 1'b1)) | ((m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op45_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((regslice_both_m_axis_tx_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_V_U_apdone_blk == 1'b1) | ((m_axis_tx_data_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op46_write_state3 == 1'b1)) | ((m_axis_tx_metadata_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op45_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_109 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_203 = ((grp_nbwritereq_fu_86_p3 == 1'd1) & (tmp_i_reg_172 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd1) & (currWord_last_V_fu_146_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_56 = ((grp_nbwritereq_fu_70_p3 == 1'd1) & (tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op31_read_state2 = ((grp_nbwritereq_fu_70_p3 == 1'd1) & (tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0));
end

always @ (*) begin
    ap_predicate_op32_read_state2 = ((grp_nbwritereq_fu_70_p3 == 1'd1) & (tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0));
end

always @ (*) begin
    ap_predicate_op34_write_state2 = ((grp_nbwritereq_fu_70_p3 == 1'd1) & (tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0));
end

always @ (*) begin
    ap_predicate_op39_read_state2 = ((grp_nbwritereq_fu_86_p3 == 1'd1) & (tmp_i_reg_172 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd1));
end

always @ (*) begin
    ap_predicate_op41_write_state2 = ((grp_nbwritereq_fu_86_p3 == 1'd1) & (tmp_i_reg_172 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd1));
end

always @ (*) begin
    ap_predicate_op45_write_state3 = ((tmp_6_i_reg_168 == 1'd1) & (tmp_4_i_reg_164 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd0) & (tmp_7_i_reg_176 == 1'd1));
end

always @ (*) begin
    ap_predicate_op46_write_state3 = ((tmp_i_reg_172 == 1'd1) & (esac_fsmState_V_load_reg_160 == 1'd1) & (tmp_5_i_reg_185 == 1'd1));
end

assign currWord_last_V_fu_146_p3 = esa_dataFifo_dout[32'd576];

assign esac_fsmState_V_load_load_fu_127_p1 = esac_fsmState_V;

assign grp_nbwritereq_fu_70_p3 = m_axis_tx_metadata_V_TREADY_int_regslice;

assign grp_nbwritereq_fu_86_p3 = m_axis_tx_data_V_TREADY_int_regslice;

assign m_axis_tx_data_V_TVALID = regslice_both_m_axis_tx_data_V_U_vld_out;

assign m_axis_tx_metadata_V_TDATA_int_regslice = {{esa_lengthFifo_dout}, {esa_sessionidFifo_dout}};

assign m_axis_tx_metadata_V_TVALID = regslice_both_m_axis_tx_metadata_V_U_vld_out;

assign tmp_4_i_nbreadreq_fu_54_p3 = esa_sessionidFifo_empty_n;

assign tmp_6_i_nbreadreq_fu_62_p3 = esa_lengthFifo_empty_n;

assign tmp_i_nbreadreq_fu_78_p3 = esa_dataFifo_empty_n;

endmodule //echo_server_application_client
