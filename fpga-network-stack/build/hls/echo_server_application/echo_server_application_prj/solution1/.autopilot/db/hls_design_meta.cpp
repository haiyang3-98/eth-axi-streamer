#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("m_axis_listen_port_V_TDATA", 16, hls_out, 0, "axis", "out_data", 1),
	Port_Property("s_axis_listen_port_status_V_TDATA", 8, hls_in, 1, "axis", "in_data", 1),
	Port_Property("s_axis_notifications_V_TDATA", 96, hls_in, 2, "axis", "in_data", 1),
	Port_Property("m_axis_read_package_V_TDATA", 32, hls_out, 3, "axis", "out_data", 1),
	Port_Property("s_axis_rx_metadata_V_TDATA", 16, hls_in, 4, "axis", "in_data", 1),
	Port_Property("s_axis_rx_data_V_TDATA", 1024, hls_in, 5, "axis", "in_data", 1),
	Port_Property("m_axis_open_connection_V_TDATA", 64, hls_out, 6, "axis", "out_data", 1),
	Port_Property("s_axis_open_status_V_TDATA", 96, hls_in, 7, "axis", "in_data", 1),
	Port_Property("m_axis_close_connection_V_TDATA", 16, hls_out, 8, "axis", "out_data", 1),
	Port_Property("m_axis_tx_metadata_V_TDATA", 32, hls_out, 9, "axis", "out_data", 1),
	Port_Property("m_axis_tx_data_V_TDATA", 1024, hls_out, 10, "axis", "out_data", 1),
	Port_Property("s_axis_tx_status_V_TDATA", 96, hls_in, 11, "axis", "in_data", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axis_tx_metadata_V_TVALID", 1, hls_out, 9, "axis", "out_vld", 1),
	Port_Property("m_axis_tx_metadata_V_TREADY", 1, hls_in, 9, "axis", "out_acc", 1),
	Port_Property("m_axis_tx_data_V_TVALID", 1, hls_out, 10, "axis", "out_vld", 1),
	Port_Property("m_axis_tx_data_V_TREADY", 1, hls_in, 10, "axis", "out_acc", 1),
	Port_Property("s_axis_rx_metadata_V_TVALID", 1, hls_in, 4, "axis", "in_vld", 1),
	Port_Property("s_axis_rx_metadata_V_TREADY", 1, hls_out, 4, "axis", "in_acc", 1),
	Port_Property("s_axis_rx_data_V_TVALID", 1, hls_in, 5, "axis", "in_vld", 1),
	Port_Property("s_axis_rx_data_V_TREADY", 1, hls_out, 5, "axis", "in_acc", 1),
	Port_Property("m_axis_listen_port_V_TVALID", 1, hls_out, 0, "axis", "out_vld", 1),
	Port_Property("m_axis_listen_port_V_TREADY", 1, hls_in, 0, "axis", "out_acc", 1),
	Port_Property("s_axis_listen_port_status_V_TVALID", 1, hls_in, 1, "axis", "in_vld", 1),
	Port_Property("s_axis_listen_port_status_V_TREADY", 1, hls_out, 1, "axis", "in_acc", 1),
	Port_Property("s_axis_notifications_V_TVALID", 1, hls_in, 2, "axis", "in_vld", 1),
	Port_Property("s_axis_notifications_V_TREADY", 1, hls_out, 2, "axis", "in_acc", 1),
	Port_Property("m_axis_read_package_V_TVALID", 1, hls_out, 3, "axis", "out_vld", 1),
	Port_Property("m_axis_read_package_V_TREADY", 1, hls_in, 3, "axis", "out_acc", 1),
	Port_Property("m_axis_open_connection_V_TVALID", 1, hls_out, 6, "axis", "out_vld", 1),
	Port_Property("m_axis_open_connection_V_TREADY", 1, hls_in, 6, "axis", "out_acc", 1),
	Port_Property("s_axis_open_status_V_TVALID", 1, hls_in, 7, "axis", "in_vld", 1),
	Port_Property("s_axis_open_status_V_TREADY", 1, hls_out, 7, "axis", "in_acc", 1),
	Port_Property("m_axis_close_connection_V_TVALID", 1, hls_out, 8, "axis", "out_vld", 1),
	Port_Property("m_axis_close_connection_V_TREADY", 1, hls_in, 8, "axis", "out_acc", 1),
	Port_Property("s_axis_tx_status_V_TVALID", 1, hls_in, 11, "axis", "in_vld", 1),
	Port_Property("s_axis_tx_status_V_TREADY", 1, hls_out, 11, "axis", "in_acc", 1),
};
const char* HLS_Design_Meta::dut_name = "echo_server_application";
