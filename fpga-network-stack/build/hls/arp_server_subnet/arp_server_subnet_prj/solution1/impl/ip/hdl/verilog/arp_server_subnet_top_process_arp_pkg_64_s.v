// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module arp_server_subnet_top_process_arp_pkg_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        arpDataIn_internal_dout,
        arpDataIn_internal_empty_n,
        arpDataIn_internal_read,
        myIpAddress_dout,
        myIpAddress_empty_n,
        myIpAddress_read,
        myIpAddress_out_din,
        myIpAddress_out_full_n,
        myIpAddress_out_write,
        arpTableInsertFifo_din,
        arpTableInsertFifo_full_n,
        arpTableInsertFifo_write,
        arpReplyMetaFifo_din,
        arpReplyMetaFifo_full_n,
        arpReplyMetaFifo_write,
        regRequestCount,
        regRequestCount_ap_vld,
        regReplyCount,
        regReplyCount_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] arpDataIn_internal_dout;
input   arpDataIn_internal_empty_n;
output   arpDataIn_internal_read;
input  [31:0] myIpAddress_dout;
input   myIpAddress_empty_n;
output   myIpAddress_read;
output  [31:0] myIpAddress_out_din;
input   myIpAddress_out_full_n;
output   myIpAddress_out_write;
output  [191:0] arpTableInsertFifo_din;
input   arpTableInsertFifo_full_n;
output   arpTableInsertFifo_write;
output  [191:0] arpReplyMetaFifo_din;
input   arpReplyMetaFifo_full_n;
output   arpReplyMetaFifo_write;
output  [15:0] regRequestCount;
output   regRequestCount_ap_vld;
output  [15:0] regReplyCount;
output   regReplyCount_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg arpDataIn_internal_read;
reg myIpAddress_read;
reg myIpAddress_out_write;
reg arpTableInsertFifo_write;
reg arpReplyMetaFifo_write;
reg[15:0] regRequestCount;
reg regRequestCount_ap_vld;
reg[15:0] regReplyCount;
reg regReplyCount_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_i_nbreadreq_fu_130_p3;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_i_i_reg_649;
reg   [0:0] tmp_i_i_reg_649_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_653;
reg   [0:0] tmp_last_V_reg_653_pp0_iter1_reg;
reg   [0:0] icmp_ln870_reg_670;
reg   [15:0] p_Result_i_i_reg_674;
reg    ap_predicate_op100_write_state3;
reg    ap_predicate_op108_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] header_ready;
reg   [15:0] header_idx;
reg   [335:0] header_header_V;
reg   [15:0] pag_requestCounter_V;
reg   [15:0] pag_replyCounter_V;
reg    myIpAddress_blk_n;
wire    ap_block_pp0_stage0;
reg    myIpAddress_out_blk_n;
reg    arpDataIn_internal_blk_n;
reg    arpReplyMetaFifo_blk_n;
reg    arpTableInsertFifo_blk_n;
reg   [31:0] reg_302;
wire   [0:0] icmp_ln870_fu_554_p2;
wire   [15:0] p_Result_i_i_fu_560_p4;
reg   [47:0] reg_306;
wire   [0:0] tmp_last_V_fu_314_p3;
wire   [335:0] p_Result_s_fu_506_p2;
wire   [0:0] header_ready_load_load_fu_322_p1;
reg   [47:0] p_Result_2_i_i_reg_678;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_header_ready_flag_1_i_i_phi_fu_189_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_186;
wire   [0:0] xor_ln58_fu_512_p2;
reg   [0:0] ap_phi_mux_header_idx_flag_0_i_i_phi_fu_199_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_header_idx_flag_0_i_i_reg_196;
reg   [15:0] ap_phi_mux_header_idx_new_0_i_i_phi_fu_210_p4;
wire   [15:0] add_ln67_fu_525_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_header_idx_new_0_i_i_reg_207;
reg   [0:0] ap_phi_mux_header_ready_flag_2_i_i_phi_fu_220_p6;
wire   [0:0] ap_phi_reg_pp0_iter0_header_ready_flag_2_i_i_reg_217;
reg   [0:0] ap_phi_mux_header_ready_new_2_i_i_phi_fu_234_p6;
wire   [0:0] ap_phi_reg_pp0_iter0_header_ready_new_2_i_i_reg_231;
reg   [0:0] ap_phi_mux_header_idx_flag_1_i_i_phi_fu_248_p6;
wire   [0:0] ap_phi_reg_pp0_iter0_header_idx_flag_1_i_i_reg_245;
reg   [15:0] ap_phi_mux_header_idx_new_1_i_i_phi_fu_262_p6;
wire   [15:0] ap_phi_reg_pp0_iter0_header_idx_new_1_i_i_reg_259;
wire   [335:0] ap_phi_reg_pp0_iter0_p_Val2_1_reg_273;
reg   [335:0] ap_phi_reg_pp0_iter1_p_Val2_1_reg_273;
wire   [15:0] add_ln691_fu_636_p2;
wire   [15:0] add_ln691_1_fu_601_p2;
reg    ap_block_pp0_stage0_01001;
reg   [15:0] regReplyCount_preg;
reg   [15:0] regRequestCount_preg;
wire   [21:0] shl_ln_fu_338_p3;
wire   [22:0] zext_ln58_fu_346_p1;
wire   [22:0] add_ln58_fu_350_p2;
wire   [63:0] tmp_data_V_fu_310_p1;
wire   [0:0] icmp_ln58_fu_356_p2;
wire   [21:0] or_ln60_fu_366_p2;
wire   [21:0] select_ln58_fu_372_p3;
wire   [2:0] trunc_ln58_fu_334_p1;
wire   [8:0] tmp_fu_386_p3;
wire   [0:0] icmp_ln58_1_fu_380_p2;
wire   [8:0] trunc_ln58_1_fu_394_p1;
wire   [8:0] sub_ln58_fu_398_p2;
wire   [8:0] select_ln58_1_fu_404_p3;
wire   [8:0] select_ln58_3_fu_420_p3;
wire   [8:0] select_ln58_2_fu_412_p3;
wire   [8:0] sub_ln58_1_fu_428_p2;
wire   [335:0] zext_ln215_fu_362_p1;
wire   [335:0] zext_ln58_1_fu_434_p1;
wire   [335:0] shl_ln58_fu_446_p2;
reg   [335:0] tmp_1_fu_452_p4;
wire   [335:0] zext_ln58_2_fu_438_p1;
wire   [335:0] zext_ln58_3_fu_442_p1;
wire   [335:0] shl_ln58_1_fu_470_p2;
wire   [335:0] lshr_ln58_fu_476_p2;
wire   [335:0] and_ln58_fu_482_p2;
wire   [335:0] xor_ln58_1_fu_488_p2;
wire   [335:0] select_ln58_4_fu_462_p3;
wire   [335:0] and_ln58_1_fu_494_p2;
wire   [335:0] and_ln58_2_fu_500_p2;
wire   [31:0] p_Result_9_i_i_fu_544_p4;
wire   [128:0] or_ln_fu_580_p5;
wire   [159:0] tmp_5_i_i_fu_614_p6;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_107;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 header_ready = 1'd0;
#0 header_idx = 16'd0;
#0 header_header_V = 336'd22969770278074827527357335424865723297445183488;
#0 pag_requestCounter_V = 16'd0;
#0 pag_replyCounter_V = 16'd0;
#0 regReplyCount_preg = 16'd0;
#0 regRequestCount_preg = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        regReplyCount_preg <= 16'd0;
    end else begin
        if (((p_Result_i_i_reg_674 == 16'd512) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
            regReplyCount_preg <= add_ln691_1_fu_601_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        regRequestCount_preg <= 16'd0;
    end else begin
        if (((p_Result_i_i_reg_674 == 16'd256) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
            regRequestCount_preg <= add_ln691_fu_636_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_107)) begin
        if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (header_ready_load_load_fu_322_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_273 <= p_Result_s_fu_506_p2;
        end else if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (header_ready_load_load_fu_322_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_273 <= header_header_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_273 <= ap_phi_reg_pp0_iter0_p_Val2_1_reg_273;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (header_ready_load_load_fu_322_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V <= p_Result_s_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (ap_phi_mux_header_idx_flag_1_i_i_phi_fu_248_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_idx <= ap_phi_mux_header_idx_new_1_i_i_phi_fu_262_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (ap_phi_mux_header_ready_flag_2_i_i_phi_fu_220_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_ready <= ap_phi_mux_header_ready_new_2_i_i_phi_fu_234_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_reg_653 == 1'd1) & (tmp_i_i_reg_649 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln870_reg_670 <= icmp_ln870_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_reg_653 == 1'd1) & (tmp_i_i_reg_649 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_i_i_fu_560_p4 == 16'd256) & (icmp_ln870_fu_554_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_2_i_i_reg_678 <= {{ap_phi_reg_pp0_iter1_p_Val2_1_reg_273[95:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_reg_653 == 1'd1) & (tmp_i_i_reg_649 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln870_fu_554_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_i_i_reg_674 <= {{ap_phi_reg_pp0_iter1_p_Val2_1_reg_273[175:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_i_i_reg_674 == 16'd512) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pag_replyCounter_V <= add_ln691_1_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_i_i_reg_674 == 16'd256) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pag_requestCounter_V <= add_ln691_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_last_V_reg_653 == 1'd1) & (tmp_i_i_reg_649 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_i_i_fu_560_p4 == 16'd256) & (icmp_ln870_fu_554_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_last_V_reg_653 == 1'd1) & (tmp_i_i_reg_649 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_i_i_fu_560_p4 == 16'd512) & (icmp_ln870_fu_554_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_302 <= {{ap_phi_reg_pp0_iter1_p_Val2_1_reg_273[255:224]}};
        reg_306 <= {{ap_phi_reg_pp0_iter1_p_Val2_1_reg_273[223:176]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_i_reg_649 <= tmp_i_i_nbreadreq_fu_130_p3;
        tmp_i_i_reg_649_pp0_iter1_reg <= tmp_i_i_reg_649;
        tmp_last_V_reg_653_pp0_iter1_reg <= tmp_last_V_reg_653;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_reg_653 <= arpDataIn_internal_dout[32'd72];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1)) begin
        if ((header_ready_load_load_fu_322_p1 == 1'd0)) begin
            ap_phi_mux_header_idx_flag_0_i_i_phi_fu_199_p4 = 1'd1;
        end else if ((header_ready_load_load_fu_322_p1 == 1'd1)) begin
            ap_phi_mux_header_idx_flag_0_i_i_phi_fu_199_p4 = 1'd0;
        end else begin
            ap_phi_mux_header_idx_flag_0_i_i_phi_fu_199_p4 = ap_phi_reg_pp0_iter0_header_idx_flag_0_i_i_reg_196;
        end
    end else begin
        ap_phi_mux_header_idx_flag_0_i_i_phi_fu_199_p4 = ap_phi_reg_pp0_iter0_header_idx_flag_0_i_i_reg_196;
    end
end

always @ (*) begin
    if ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd0)) begin
        ap_phi_mux_header_idx_flag_1_i_i_phi_fu_248_p6 = 1'd0;
    end else if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (tmp_last_V_fu_314_p3 == 1'd0))) begin
        ap_phi_mux_header_idx_flag_1_i_i_phi_fu_248_p6 = ap_phi_mux_header_idx_flag_0_i_i_phi_fu_199_p4;
    end else if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (tmp_last_V_fu_314_p3 == 1'd1))) begin
        ap_phi_mux_header_idx_flag_1_i_i_phi_fu_248_p6 = 1'd1;
    end else begin
        ap_phi_mux_header_idx_flag_1_i_i_phi_fu_248_p6 = ap_phi_reg_pp0_iter0_header_idx_flag_1_i_i_reg_245;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (header_ready_load_load_fu_322_p1 == 1'd0))) begin
        ap_phi_mux_header_idx_new_0_i_i_phi_fu_210_p4 = add_ln67_fu_525_p2;
    end else begin
        ap_phi_mux_header_idx_new_0_i_i_phi_fu_210_p4 = ap_phi_reg_pp0_iter0_header_idx_new_0_i_i_reg_207;
    end
end

always @ (*) begin
    if ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1)) begin
        if ((tmp_last_V_fu_314_p3 == 1'd0)) begin
            ap_phi_mux_header_idx_new_1_i_i_phi_fu_262_p6 = ap_phi_mux_header_idx_new_0_i_i_phi_fu_210_p4;
        end else if ((tmp_last_V_fu_314_p3 == 1'd1)) begin
            ap_phi_mux_header_idx_new_1_i_i_phi_fu_262_p6 = 16'd0;
        end else begin
            ap_phi_mux_header_idx_new_1_i_i_phi_fu_262_p6 = ap_phi_reg_pp0_iter0_header_idx_new_1_i_i_reg_259;
        end
    end else begin
        ap_phi_mux_header_idx_new_1_i_i_phi_fu_262_p6 = ap_phi_reg_pp0_iter0_header_idx_new_1_i_i_reg_259;
    end
end

always @ (*) begin
    if ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1)) begin
        if ((header_ready_load_load_fu_322_p1 == 1'd0)) begin
            ap_phi_mux_header_ready_flag_1_i_i_phi_fu_189_p4 = xor_ln58_fu_512_p2;
        end else if ((header_ready_load_load_fu_322_p1 == 1'd1)) begin
            ap_phi_mux_header_ready_flag_1_i_i_phi_fu_189_p4 = 1'd0;
        end else begin
            ap_phi_mux_header_ready_flag_1_i_i_phi_fu_189_p4 = ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_186;
        end
    end else begin
        ap_phi_mux_header_ready_flag_1_i_i_phi_fu_189_p4 = ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_186;
    end
end

always @ (*) begin
    if ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd0)) begin
        ap_phi_mux_header_ready_flag_2_i_i_phi_fu_220_p6 = 1'd0;
    end else if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (tmp_last_V_fu_314_p3 == 1'd0))) begin
        ap_phi_mux_header_ready_flag_2_i_i_phi_fu_220_p6 = ap_phi_mux_header_ready_flag_1_i_i_phi_fu_189_p4;
    end else if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (tmp_last_V_fu_314_p3 == 1'd1))) begin
        ap_phi_mux_header_ready_flag_2_i_i_phi_fu_220_p6 = 1'd1;
    end else begin
        ap_phi_mux_header_ready_flag_2_i_i_phi_fu_220_p6 = ap_phi_reg_pp0_iter0_header_ready_flag_2_i_i_reg_217;
    end
end

always @ (*) begin
    if ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1)) begin
        if ((tmp_last_V_fu_314_p3 == 1'd0)) begin
            ap_phi_mux_header_ready_new_2_i_i_phi_fu_234_p6 = 1'd1;
        end else if ((tmp_last_V_fu_314_p3 == 1'd1)) begin
            ap_phi_mux_header_ready_new_2_i_i_phi_fu_234_p6 = 1'd0;
        end else begin
            ap_phi_mux_header_ready_new_2_i_i_phi_fu_234_p6 = ap_phi_reg_pp0_iter0_header_ready_new_2_i_i_reg_231;
        end
    end else begin
        ap_phi_mux_header_ready_new_2_i_i_phi_fu_234_p6 = ap_phi_reg_pp0_iter0_header_ready_new_2_i_i_reg_231;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0))) begin
        arpDataIn_internal_blk_n = arpDataIn_internal_empty_n;
    end else begin
        arpDataIn_internal_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpDataIn_internal_read = 1'b1;
    end else begin
        arpDataIn_internal_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op108_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        arpReplyMetaFifo_blk_n = arpReplyMetaFifo_full_n;
    end else begin
        arpReplyMetaFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op108_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpReplyMetaFifo_write = 1'b1;
    end else begin
        arpReplyMetaFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op100_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        arpTableInsertFifo_blk_n = arpTableInsertFifo_full_n;
    end else begin
        arpTableInsertFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op100_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arpTableInsertFifo_write = 1'b1;
    end else begin
        arpTableInsertFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        myIpAddress_blk_n = myIpAddress_empty_n;
    end else begin
        myIpAddress_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        myIpAddress_out_blk_n = myIpAddress_out_full_n;
    end else begin
        myIpAddress_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        myIpAddress_out_write = 1'b1;
    end else begin
        myIpAddress_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        myIpAddress_read = 1'b1;
    end else begin
        myIpAddress_read = 1'b0;
    end
end

always @ (*) begin
    if (((p_Result_i_i_reg_674 == 16'd512) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        regReplyCount = add_ln691_1_fu_601_p2;
    end else begin
        regReplyCount = regReplyCount_preg;
    end
end

always @ (*) begin
    if (((p_Result_i_i_reg_674 == 16'd512) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        regReplyCount_ap_vld = 1'b1;
    end else begin
        regReplyCount_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((p_Result_i_i_reg_674 == 16'd256) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        regRequestCount = add_ln691_fu_636_p2;
    end else begin
        regRequestCount = regRequestCount_preg;
    end
end

always @ (*) begin
    if (((p_Result_i_i_reg_674 == 16'd256) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        regRequestCount_ap_vld = 1'b1;
    end else begin
        regRequestCount_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_fu_350_p2 = (zext_ln58_fu_346_p1 + 23'd64);

assign add_ln67_fu_525_p2 = (header_idx + 16'd1);

assign add_ln691_1_fu_601_p2 = (pag_replyCounter_V + 16'd1);

assign add_ln691_fu_636_p2 = (pag_requestCounter_V + 16'd1);

assign and_ln58_1_fu_494_p2 = (xor_ln58_1_fu_488_p2 & header_header_V);

assign and_ln58_2_fu_500_p2 = (select_ln58_4_fu_462_p3 & and_ln58_fu_482_p2);

assign and_ln58_fu_482_p2 = (shl_ln58_1_fu_470_p2 & lshr_ln58_fu_476_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op108_write_state3 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op100_write_state3 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((myIpAddress_out_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op108_write_state3 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op100_write_state3 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((myIpAddress_out_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op108_write_state3 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op100_write_state3 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((myIpAddress_out_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((tmp_i_i_nbreadreq_fu_130_p3 == 1'd1) & (arpDataIn_internal_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((myIpAddress_out_full_n == 1'b0) | (myIpAddress_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op108_write_state3 == 1'b1) & (arpReplyMetaFifo_full_n == 1'b0)) | ((ap_predicate_op100_write_state3 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_107 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_header_idx_flag_0_i_i_reg_196 = 'bx;

assign ap_phi_reg_pp0_iter0_header_idx_flag_1_i_i_reg_245 = 'bx;

assign ap_phi_reg_pp0_iter0_header_idx_new_0_i_i_reg_207 = 'bx;

assign ap_phi_reg_pp0_iter0_header_idx_new_1_i_i_reg_259 = 'bx;

assign ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_186 = 'bx;

assign ap_phi_reg_pp0_iter0_header_ready_flag_2_i_i_reg_217 = 'bx;

assign ap_phi_reg_pp0_iter0_header_ready_new_2_i_i_reg_231 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_1_reg_273 = 'bx;

always @ (*) begin
    ap_predicate_op100_write_state3 = ((p_Result_i_i_reg_674 == 16'd512) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op108_write_state3 = ((p_Result_i_i_reg_674 == 16'd256) & (icmp_ln870_reg_670 == 1'd1) & (tmp_last_V_reg_653_pp0_iter1_reg == 1'd1) & (tmp_i_i_reg_649_pp0_iter1_reg == 1'd1));
end

assign arpReplyMetaFifo_din = tmp_5_i_i_fu_614_p6;

assign arpTableInsertFifo_din = or_ln_fu_580_p5;

assign header_ready_load_load_fu_322_p1 = header_ready;

assign icmp_ln58_1_fu_380_p2 = ((shl_ln_fu_338_p3 > select_ln58_fu_372_p3) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_356_p2 = ((add_ln58_fu_350_p2 < 23'd336) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_554_p2 = ((p_Result_9_i_i_fu_544_p4 == myIpAddress_dout) ? 1'b1 : 1'b0);

assign lshr_ln58_fu_476_p2 = 336'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444735 >> zext_ln58_3_fu_442_p1;

assign myIpAddress_out_din = myIpAddress_dout;

assign or_ln60_fu_366_p2 = (shl_ln_fu_338_p3 | 22'd63);

assign or_ln_fu_580_p5 = {{{{{{17'd65536}, {reg_306}}}, {32'd0}}}, {reg_302}};

assign p_Result_9_i_i_fu_544_p4 = {{ap_phi_reg_pp0_iter1_p_Val2_1_reg_273[335:304]}};

assign p_Result_i_i_fu_560_p4 = {{ap_phi_reg_pp0_iter1_p_Val2_1_reg_273[175:160]}};

assign p_Result_s_fu_506_p2 = (and_ln58_2_fu_500_p2 | and_ln58_1_fu_494_p2);

assign select_ln58_1_fu_404_p3 = ((icmp_ln58_1_fu_380_p2[0:0] == 1'b1) ? tmp_fu_386_p3 : trunc_ln58_1_fu_394_p1);

assign select_ln58_2_fu_412_p3 = ((icmp_ln58_1_fu_380_p2[0:0] == 1'b1) ? trunc_ln58_1_fu_394_p1 : tmp_fu_386_p3);

assign select_ln58_3_fu_420_p3 = ((icmp_ln58_1_fu_380_p2[0:0] == 1'b1) ? sub_ln58_fu_398_p2 : tmp_fu_386_p3);

assign select_ln58_4_fu_462_p3 = ((icmp_ln58_1_fu_380_p2[0:0] == 1'b1) ? tmp_1_fu_452_p4 : shl_ln58_fu_446_p2);

assign select_ln58_fu_372_p3 = ((icmp_ln58_fu_356_p2[0:0] == 1'b1) ? or_ln60_fu_366_p2 : 22'd335);

assign shl_ln58_1_fu_470_p2 = 336'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444735 << zext_ln58_2_fu_438_p1;

assign shl_ln58_fu_446_p2 = zext_ln215_fu_362_p1 << zext_ln58_1_fu_434_p1;

assign shl_ln_fu_338_p3 = {{header_idx}, {6'd0}};

assign sub_ln58_1_fu_428_p2 = ($signed(9'd335) - $signed(select_ln58_1_fu_404_p3));

assign sub_ln58_fu_398_p2 = ($signed(9'd335) - $signed(tmp_fu_386_p3));

integer ap_tvar_int_0;

always @ (shl_ln58_fu_446_p2) begin
    for (ap_tvar_int_0 = 336 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 335 - 0) begin
            tmp_1_fu_452_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_452_p4[ap_tvar_int_0] = shl_ln58_fu_446_p2[335 - ap_tvar_int_0];
        end
    end
end

assign tmp_5_i_i_fu_614_p6 = {{{{{reg_302}, {16'd0}}, {reg_306}}, {16'd0}}, {p_Result_2_i_i_reg_678}};

assign tmp_data_V_fu_310_p1 = arpDataIn_internal_dout[63:0];

assign tmp_fu_386_p3 = {{trunc_ln58_fu_334_p1}, {6'd0}};

assign tmp_i_i_nbreadreq_fu_130_p3 = arpDataIn_internal_empty_n;

assign tmp_last_V_fu_314_p3 = arpDataIn_internal_dout[32'd72];

assign trunc_ln58_1_fu_394_p1 = select_ln58_fu_372_p3[8:0];

assign trunc_ln58_fu_334_p1 = header_idx[2:0];

assign xor_ln58_1_fu_488_p2 = (336'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444735 ^ and_ln58_fu_482_p2);

assign xor_ln58_fu_512_p2 = (icmp_ln58_fu_356_p2 ^ 1'd1);

assign zext_ln215_fu_362_p1 = tmp_data_V_fu_310_p1;

assign zext_ln58_1_fu_434_p1 = select_ln58_3_fu_420_p3;

assign zext_ln58_2_fu_438_p1 = select_ln58_2_fu_412_p3;

assign zext_ln58_3_fu_442_p1 = sub_ln58_1_fu_428_p2;

assign zext_ln58_fu_346_p1 = shl_ln_fu_338_p3;

endmodule //arp_server_subnet_top_process_arp_pkg_64_s
