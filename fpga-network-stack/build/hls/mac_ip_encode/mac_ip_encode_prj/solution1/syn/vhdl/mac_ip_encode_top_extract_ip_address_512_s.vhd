-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_ip_encode_top_extract_ip_address_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataIn_internal_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    dataIn_internal_empty_n : IN STD_LOGIC;
    dataIn_internal_read : OUT STD_LOGIC;
    regSubNetMask_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    regSubNetMask_empty_n : IN STD_LOGIC;
    regSubNetMask_read : OUT STD_LOGIC;
    regDefaultGateway_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    regDefaultGateway_empty_n : IN STD_LOGIC;
    regDefaultGateway_read : OUT STD_LOGIC;
    dataStreamBuffer0_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    dataStreamBuffer0_full_n : IN STD_LOGIC;
    dataStreamBuffer0_write : OUT STD_LOGIC;
    m_axis_arp_lookup_request_V_TREADY : IN STD_LOGIC;
    m_axis_arp_lookup_request_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axis_arp_lookup_request_V_TVALID : OUT STD_LOGIC );
end;


architecture behav of mac_ip_encode_top_extract_ip_address_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv25_9F : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010011111";
    constant ap_const_lv159_lc_2 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv160_lc_3 : STD_LOGIC_VECTOR (159 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv160_lc_4 : STD_LOGIC_VECTOR (159 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv160_lc_5 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_i_i_nbreadreq_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_i_i_reg_428 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_428_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal header_ready_load_reg_447 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op76_write_state3 : BOOLEAN;
    signal ap_predicate_op77_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal tmp_i_i_reg_428_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal metaWritten_load_reg_461 : STD_LOGIC_VECTOR (0 downto 0);
    signal metaWritten_load_reg_461_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_475 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op84_write_state4 : BOOLEAN;
    signal ap_predicate_op85_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal tmp_i_i_reg_428_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal metaWritten_load_reg_461_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_475_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op86_write_state5 : BOOLEAN;
    signal ap_predicate_op88_write_state5 : BOOLEAN;
    signal regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal header_ready : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal header_idx : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000101";
    signal metaWritten : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_axis_arp_lookup_request_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal regSubNetMask_blk_n : STD_LOGIC;
    signal regDefaultGateway_blk_n : STD_LOGIC;
    signal dataIn_internal_blk_n : STD_LOGIC;
    signal dataStreamBuffer0_blk_n : STD_LOGIC;
    signal dataIn_internal_read_reg_432 : STD_LOGIC_VECTOR (1023 downto 0);
    signal dataIn_internal_read_reg_432_pp0_iter1_reg : STD_LOGIC_VECTOR (1023 downto 0);
    signal tmp_last_V_reg_439 : STD_LOGIC_VECTOR (0 downto 0);
    signal header_ready_load_load_fu_227_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_333_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal metaWritten_load_load_fu_352_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_1_reg_465 : STD_LOGIC_VECTOR (31 downto 0);
    signal dstIpAddress_V_fu_400_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal dstIpAddress_V_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln870_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_134 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_header_idx_new_0_i_i_phi_fu_148_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_fu_345_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_145 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_155 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_header_ready_flag_1_i_i_phi_fu_170_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_166 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_166 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln67_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_header_ready_new_1_i_i_phi_fu_181_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln67_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_177 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_header_idx_new_1_i_i_phi_fu_192_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln67_fu_368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_188 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_203_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_199 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_199 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln67_1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_8_reg_210 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_8_reg_210 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_8_reg_210 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln_fu_239_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln414_fu_256_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal st_fu_259_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal tmp_74_fu_247_p1 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_fu_267_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal tmp_fu_275_p4 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_2_fu_293_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_3_fu_301_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln414_fu_309_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln414_fu_315_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_1_fu_285_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln414_1_fu_321_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln414_2_fu_327_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln870_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln870_fu_416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal m_axis_arp_lookup_request_V_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal m_axis_arp_lookup_request_V_TVALID_int_regslice : STD_LOGIC;
    signal m_axis_arp_lookup_request_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_m_axis_arp_lookup_request_V_U_vld_out : STD_LOGIC;
    signal ap_condition_152 : BOOLEAN;
    signal ap_condition_244 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component mac_ip_encode_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_m_axis_arp_lookup_request_V_U : component mac_ip_encode_top_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => m_axis_arp_lookup_request_V_TDATA_int_regslice,
        vld_in => m_axis_arp_lookup_request_V_TVALID_int_regslice,
        ack_in => m_axis_arp_lookup_request_V_TREADY_int_regslice,
        data_out => m_axis_arp_lookup_request_V_TDATA,
        vld_out => regslice_both_m_axis_arp_lookup_request_V_U_vld_out,
        ack_out => m_axis_arp_lookup_request_V_TREADY,
        apdone_blk => regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_152)) then
                if ((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_166 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_166 <= ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_166;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_199_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_152)) then
                if ((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_199 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_199 <= ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_199;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_Val2_8_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_244)) then
                if (((tmp_i_i_reg_428 = ap_const_lv1_1) and (header_ready_load_load_fu_227_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_Val2_8_reg_210 <= p_Result_s_fu_333_p2;
                elsif (((tmp_i_i_reg_428 = ap_const_lv1_1) and (header_ready_load_load_fu_227_p1 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_p_Val2_8_reg_210 <= header_header_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_8_reg_210 <= ap_phi_reg_pp0_iter1_p_Val2_8_reg_210;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_p_Val2_8_reg_210 <= ap_phi_reg_pp0_iter0_p_Val2_8_reg_210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dataIn_internal_read_reg_432 <= dataIn_internal_dout;
                tmp_last_V_reg_439 <= dataIn_internal_dout(576 downto 576);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dataIn_internal_read_reg_432_pp0_iter1_reg <= dataIn_internal_read_reg_432;
                tmp_i_i_reg_428 <= tmp_i_i_nbreadreq_fu_94_p3;
                tmp_i_i_reg_428_pp0_iter1_reg <= tmp_i_i_reg_428;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((metaWritten_load_reg_461 = ap_const_lv1_0) and (tmp_i_i_reg_428_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dstIpAddress_V_reg_470 <= ap_phi_reg_pp0_iter2_p_Val2_8_reg_210(159 downto 128);
                icmp_ln870_reg_475 <= icmp_ln870_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_reg_428 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (header_ready_load_load_fu_227_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_header_V <= p_Result_s_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_header_ready_flag_1_i_i_phi_fu_170_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_idx <= ap_phi_mux_header_idx_new_1_i_i_phi_fu_192_p4;
                header_ready <= ap_phi_mux_header_ready_new_1_i_i_phi_fu_181_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_reg_428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                header_ready_load_reg_447 <= header_ready;
                metaWritten_load_reg_461 <= metaWritten;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln870_reg_475_pp0_iter3_reg <= icmp_ln870_reg_475;
                lhs_V_1_reg_465 <= regDefaultGateway_dout;
                metaWritten_load_reg_461_pp0_iter2_reg <= metaWritten_load_reg_461;
                metaWritten_load_reg_461_pp0_iter3_reg <= metaWritten_load_reg_461_pp0_iter2_reg;
                tmp_i_i_reg_428_pp0_iter2_reg <= tmp_i_i_reg_428_pp0_iter1_reg;
                tmp_i_i_reg_428_pp0_iter3_reg <= tmp_i_i_reg_428_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_203_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                metaWritten <= ap_phi_mux_header_ready_new_1_i_i_phi_fu_181_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln67_fu_345_p2 <= std_logic_vector(unsigned(header_idx) + unsigned(ap_const_lv16_1));
    and_ln414_1_fu_321_p2 <= (xor_ln414_fu_315_p2 and header_header_V);
    and_ln414_2_fu_327_p2 <= (select_ln414_1_fu_285_p3 and and_ln414_fu_309_p2);
    and_ln414_fu_309_p2 <= (select_ln414_3_fu_301_p3 and select_ln414_2_fu_293_p3);
    and_ln870_fu_416_p2 <= (xor_ln870_fu_410_p2 and regSubNetMask_dout);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, dataIn_internal_empty_n, tmp_i_i_nbreadreq_fu_94_p3, regSubNetMask_empty_n, regDefaultGateway_empty_n, dataStreamBuffer0_full_n, ap_predicate_op76_write_state3, ap_predicate_op77_write_state3, ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, ap_predicate_op86_write_state5, ap_predicate_op88_write_state5, regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regDefaultGateway_empty_n = ap_const_logic_0) or (regSubNetMask_empty_n = ap_const_logic_0) or ((ap_predicate_op77_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)) or ((ap_predicate_op76_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (dataIn_internal_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk = ap_const_logic_1) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op88_write_state5 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, dataIn_internal_empty_n, tmp_i_i_nbreadreq_fu_94_p3, regSubNetMask_empty_n, regDefaultGateway_empty_n, dataStreamBuffer0_full_n, ap_predicate_op76_write_state3, ap_predicate_op77_write_state3, ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, ap_block_state4_io, ap_predicate_op86_write_state5, ap_predicate_op88_write_state5, regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk, ap_block_state5_io, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regDefaultGateway_empty_n = ap_const_logic_0) or (regSubNetMask_empty_n = ap_const_logic_0) or ((ap_predicate_op77_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)) or ((ap_predicate_op76_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (dataIn_internal_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or (regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk = ap_const_logic_1) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op88_write_state5 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, dataIn_internal_empty_n, tmp_i_i_nbreadreq_fu_94_p3, regSubNetMask_empty_n, regDefaultGateway_empty_n, dataStreamBuffer0_full_n, ap_predicate_op76_write_state3, ap_predicate_op77_write_state3, ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, ap_block_state4_io, ap_predicate_op86_write_state5, ap_predicate_op88_write_state5, regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk, ap_block_state5_io, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regDefaultGateway_empty_n = ap_const_logic_0) or (regSubNetMask_empty_n = ap_const_logic_0) or ((ap_predicate_op77_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)) or ((ap_predicate_op76_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (dataIn_internal_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or (regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk = ap_const_logic_1) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op88_write_state5 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg, dataIn_internal_empty_n, tmp_i_i_nbreadreq_fu_94_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (dataIn_internal_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(regSubNetMask_empty_n, regDefaultGateway_empty_n, dataStreamBuffer0_full_n, ap_predicate_op76_write_state3, ap_predicate_op77_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regDefaultGateway_empty_n = ap_const_logic_0) or (regSubNetMask_empty_n = ap_const_logic_0) or ((ap_predicate_op77_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)) or ((ap_predicate_op76_write_state3 = ap_const_boolean_1) and (dataStreamBuffer0_full_n = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_state4_io <= (((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state5_io_assign_proc : process(ap_predicate_op86_write_state5, ap_predicate_op88_write_state5, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_state5_io <= (((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op88_write_state5 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(ap_predicate_op86_write_state5, ap_predicate_op88_write_state5, regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((regslice_both_m_axis_arp_lookup_request_V_U_apdone_blk = ap_const_logic_1) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op88_write_state5 = ap_const_boolean_1)) or ((m_axis_arp_lookup_request_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)));
    end process;


    ap_condition_152_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_152 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_244_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_244 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_header_idx_new_0_i_i_phi_fu_148_p4_assign_proc : process(tmp_i_i_reg_428, header_ready_load_load_fu_227_p1, add_ln67_fu_345_p2, ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_145)
    begin
        if (((tmp_i_i_reg_428 = ap_const_lv1_1) and (header_ready_load_load_fu_227_p1 = ap_const_lv1_0))) then 
            ap_phi_mux_header_idx_new_0_i_i_phi_fu_148_p4 <= add_ln67_fu_345_p2;
        else 
            ap_phi_mux_header_idx_new_0_i_i_phi_fu_148_p4 <= ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_145;
        end if; 
    end process;


    ap_phi_mux_header_idx_new_1_i_i_phi_fu_192_p4_assign_proc : process(tmp_i_i_reg_428, select_ln67_fu_368_p3, ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_188)
    begin
        if ((tmp_i_i_reg_428 = ap_const_lv1_1)) then 
            ap_phi_mux_header_idx_new_1_i_i_phi_fu_192_p4 <= select_ln67_fu_368_p3;
        else 
            ap_phi_mux_header_idx_new_1_i_i_phi_fu_192_p4 <= ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_188;
        end if; 
    end process;


    ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4_assign_proc : process(tmp_i_i_reg_428, header_ready_load_load_fu_227_p1, ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_134)
    begin
        if ((tmp_i_i_reg_428 = ap_const_lv1_1)) then
            if ((header_ready_load_load_fu_227_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4 <= ap_const_lv1_1;
            elsif ((header_ready_load_load_fu_227_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4 <= ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_134;
            end if;
        else 
            ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4 <= ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_134;
        end if; 
    end process;


    ap_phi_mux_header_ready_flag_1_i_i_phi_fu_170_p4_assign_proc : process(tmp_i_i_reg_428, ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_166, or_ln67_fu_356_p2)
    begin
        if ((tmp_i_i_reg_428 = ap_const_lv1_1)) then 
            ap_phi_mux_header_ready_flag_1_i_i_phi_fu_170_p4 <= or_ln67_fu_356_p2;
        else 
            ap_phi_mux_header_ready_flag_1_i_i_phi_fu_170_p4 <= ap_phi_reg_pp0_iter1_header_ready_flag_1_i_i_reg_166;
        end if; 
    end process;


    ap_phi_mux_header_ready_new_1_i_i_phi_fu_181_p4_assign_proc : process(tmp_i_i_reg_428, xor_ln67_fu_362_p2, ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_177)
    begin
        if ((tmp_i_i_reg_428 = ap_const_lv1_1)) then 
            ap_phi_mux_header_ready_new_1_i_i_phi_fu_181_p4 <= xor_ln67_fu_362_p2;
        else 
            ap_phi_mux_header_ready_new_1_i_i_phi_fu_181_p4 <= ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_177;
        end if; 
    end process;


    ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4_assign_proc : process(tmp_i_i_reg_428, metaWritten_load_load_fu_352_p1, ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_155)
    begin
        if ((tmp_i_i_reg_428 = ap_const_lv1_1)) then
            if ((metaWritten_load_load_fu_352_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4 <= ap_const_lv1_1;
            elsif ((metaWritten_load_load_fu_352_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4 <= ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_155;
            end if;
        else 
            ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4 <= ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_155;
        end if; 
    end process;


    ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_203_p4_assign_proc : process(tmp_i_i_reg_428, ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_199, or_ln67_1_fu_376_p2)
    begin
        if ((tmp_i_i_reg_428 = ap_const_lv1_1)) then 
            ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_203_p4 <= or_ln67_1_fu_376_p2;
        else 
            ap_phi_mux_metaWritten_flag_1_i_i_phi_fu_203_p4 <= ap_phi_reg_pp0_iter1_metaWritten_flag_1_i_i_reg_199;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_header_ready_flag_1_i_i_reg_166 <= "X";
    ap_phi_reg_pp0_iter0_metaWritten_flag_1_i_i_reg_199 <= "X";
    ap_phi_reg_pp0_iter0_p_Val2_8_reg_210 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_header_idx_new_0_i_i_reg_145 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_header_idx_new_1_i_i_reg_188 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_header_ready_flag_0_i_i_reg_134 <= "X";
    ap_phi_reg_pp0_iter1_header_ready_new_1_i_i_reg_177 <= "X";
    ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_i_reg_155 <= "X";

    ap_predicate_op76_write_state3_assign_proc : process(tmp_i_i_reg_428_pp0_iter1_reg, header_ready_load_reg_447)
    begin
                ap_predicate_op76_write_state3 <= ((header_ready_load_reg_447 = ap_const_lv1_0) and (tmp_i_i_reg_428_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op77_write_state3_assign_proc : process(tmp_i_i_reg_428_pp0_iter1_reg, header_ready_load_reg_447)
    begin
                ap_predicate_op77_write_state3 <= ((header_ready_load_reg_447 = ap_const_lv1_1) and (tmp_i_i_reg_428_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op84_write_state4_assign_proc : process(tmp_i_i_reg_428_pp0_iter2_reg, metaWritten_load_reg_461_pp0_iter2_reg, icmp_ln870_reg_475)
    begin
                ap_predicate_op84_write_state4 <= ((metaWritten_load_reg_461_pp0_iter2_reg = ap_const_lv1_0) and (tmp_i_i_reg_428_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln870_reg_475 = ap_const_lv1_0));
    end process;


    ap_predicate_op85_write_state4_assign_proc : process(tmp_i_i_reg_428_pp0_iter2_reg, metaWritten_load_reg_461_pp0_iter2_reg, icmp_ln870_reg_475)
    begin
                ap_predicate_op85_write_state4 <= ((metaWritten_load_reg_461_pp0_iter2_reg = ap_const_lv1_0) and (tmp_i_i_reg_428_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln870_reg_475 = ap_const_lv1_1));
    end process;


    ap_predicate_op86_write_state5_assign_proc : process(tmp_i_i_reg_428_pp0_iter3_reg, metaWritten_load_reg_461_pp0_iter3_reg, icmp_ln870_reg_475_pp0_iter3_reg)
    begin
                ap_predicate_op86_write_state5 <= ((icmp_ln870_reg_475_pp0_iter3_reg = ap_const_lv1_0) and (metaWritten_load_reg_461_pp0_iter3_reg = ap_const_lv1_0) and (tmp_i_i_reg_428_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op88_write_state5_assign_proc : process(tmp_i_i_reg_428_pp0_iter3_reg, metaWritten_load_reg_461_pp0_iter3_reg, icmp_ln870_reg_475_pp0_iter3_reg)
    begin
                ap_predicate_op88_write_state5 <= ((icmp_ln870_reg_475_pp0_iter3_reg = ap_const_lv1_1) and (metaWritten_load_reg_461_pp0_iter3_reg = ap_const_lv1_0) and (tmp_i_i_reg_428_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    dataIn_internal_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, dataIn_internal_empty_n, tmp_i_i_nbreadreq_fu_94_p3, ap_block_pp0_stage0)
    begin
        if (((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0))) then 
            dataIn_internal_blk_n <= dataIn_internal_empty_n;
        else 
            dataIn_internal_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dataIn_internal_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_i_i_nbreadreq_fu_94_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_i_nbreadreq_fu_94_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dataIn_internal_read <= ap_const_logic_1;
        else 
            dataIn_internal_read <= ap_const_logic_0;
        end if; 
    end process;


    dataStreamBuffer0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, dataStreamBuffer0_full_n, ap_predicate_op76_write_state3, ap_predicate_op77_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op77_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op76_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            dataStreamBuffer0_blk_n <= dataStreamBuffer0_full_n;
        else 
            dataStreamBuffer0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataStreamBuffer0_din <= dataIn_internal_read_reg_432_pp0_iter1_reg;

    dataStreamBuffer0_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op76_write_state3, ap_predicate_op77_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op77_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op76_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataStreamBuffer0_write <= ap_const_logic_1;
        else 
            dataStreamBuffer0_write <= ap_const_logic_0;
        end if; 
    end process;

    dstIpAddress_V_fu_400_p4 <= ap_phi_reg_pp0_iter2_p_Val2_8_reg_210(159 downto 128);
    header_ready_load_load_fu_227_p1 <= header_ready;
    icmp_ln414_fu_250_p2 <= "1" when (unsigned(shl_ln_fu_239_p3) > unsigned(ap_const_lv25_9F)) else "0";
    icmp_ln870_fu_422_p2 <= "1" when (and_ln870_fu_416_p2 = ap_const_lv32_0) else "0";

    m_axis_arp_lookup_request_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, ap_predicate_op86_write_state5, ap_predicate_op88_write_state5, ap_block_pp0_stage0, m_axis_arp_lookup_request_V_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op88_write_state5 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)))) then 
            m_axis_arp_lookup_request_V_TDATA_blk_n <= m_axis_arp_lookup_request_V_TREADY_int_regslice;
        else 
            m_axis_arp_lookup_request_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    m_axis_arp_lookup_request_V_TDATA_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, lhs_V_1_reg_465, dstIpAddress_V_reg_470, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op85_write_state4 = ap_const_boolean_1)) then 
                m_axis_arp_lookup_request_V_TDATA_int_regslice <= dstIpAddress_V_reg_470;
            elsif ((ap_predicate_op84_write_state4 = ap_const_boolean_1)) then 
                m_axis_arp_lookup_request_V_TDATA_int_regslice <= lhs_V_1_reg_465;
            else 
                m_axis_arp_lookup_request_V_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axis_arp_lookup_request_V_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axis_arp_lookup_request_V_TVALID <= regslice_both_m_axis_arp_lookup_request_V_U_vld_out;

    m_axis_arp_lookup_request_V_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op84_write_state4, ap_predicate_op85_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op85_write_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op84_write_state4 = ap_const_boolean_1)))) then 
            m_axis_arp_lookup_request_V_TVALID_int_regslice <= ap_const_logic_1;
        else 
            m_axis_arp_lookup_request_V_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    metaWritten_load_load_fu_352_p1 <= metaWritten;
    or_ln67_1_fu_376_p2 <= (tmp_last_V_reg_439 or ap_phi_mux_metaWritten_flag_0_i_i_phi_fu_158_p4);
    or_ln67_fu_356_p2 <= (tmp_last_V_reg_439 or ap_phi_mux_header_ready_flag_0_i_i_phi_fu_137_p4);
    p_Result_s_fu_333_p2 <= (and_ln414_2_fu_327_p2 or and_ln414_1_fu_321_p2);

    regDefaultGateway_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, regDefaultGateway_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            regDefaultGateway_blk_n <= regDefaultGateway_empty_n;
        else 
            regDefaultGateway_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    regDefaultGateway_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            regDefaultGateway_read <= ap_const_logic_1;
        else 
            regDefaultGateway_read <= ap_const_logic_0;
        end if; 
    end process;


    regSubNetMask_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, regSubNetMask_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            regSubNetMask_blk_n <= regSubNetMask_empty_n;
        else 
            regSubNetMask_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    regSubNetMask_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            regSubNetMask_read <= ap_const_logic_1;
        else 
            regSubNetMask_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln414_1_fu_285_p3 <= 
        tmp_fu_275_p4 when (icmp_ln414_fu_250_p2(0) = '1') else 
        tmp_74_fu_247_p1;
    select_ln414_2_fu_293_p3 <= 
        ap_const_lv160_lc_3 when (icmp_ln414_fu_250_p2(0) = '1') else 
        ap_const_lv160_lc_4;
    select_ln414_3_fu_301_p3 <= 
        ap_const_lv160_lc_5 when (icmp_ln414_fu_250_p2(0) = '1') else 
        ap_const_lv160_lc_4;
    select_ln414_fu_267_p3 <= 
        st_fu_259_p3 when (icmp_ln414_fu_250_p2(0) = '1') else 
        tmp_74_fu_247_p1;
    select_ln67_fu_368_p3 <= 
        ap_const_lv16_0 when (tmp_last_V_reg_439(0) = '1') else 
        ap_phi_mux_header_idx_new_0_i_i_phi_fu_148_p4;
    shl_ln_fu_239_p3 <= (header_idx & ap_const_lv9_0);
    st_fu_259_p3 <= (trunc_ln414_fu_256_p1 & ap_const_lv159_lc_2);
    tmp_74_fu_247_p1 <= dataIn_internal_read_reg_432(160 - 1 downto 0);
    
    tmp_fu_275_p4_proc : process(select_ln414_fu_267_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(160+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(160+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable tmp_fu_275_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(160 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_9F(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := select_ln414_fu_267_p3;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(160-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(160-1-unsigned(ap_const_lv32_9F(8-1 downto 0)));
            for tmp_fu_275_p4_i in 0 to 160-1 loop
                v0_cpy(tmp_fu_275_p4_i) := select_ln414_fu_267_p3(160-1-tmp_fu_275_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(160-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_fu_275_p4 <= resvalue(160-1 downto 0);
    end process;

    tmp_i_i_nbreadreq_fu_94_p3 <= (0=>(dataIn_internal_empty_n), others=>'-');
    trunc_ln414_fu_256_p1 <= dataIn_internal_read_reg_432(1 - 1 downto 0);
    xor_ln414_fu_315_p2 <= (ap_const_lv160_lc_4 xor and_ln414_fu_309_p2);
    xor_ln67_fu_362_p2 <= (tmp_last_V_reg_439 xor ap_const_lv1_1);
    xor_ln870_fu_410_p2 <= (regDefaultGateway_dout xor dstIpAddress_V_fu_400_p4);
end behav;
